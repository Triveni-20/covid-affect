{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.544795Z",
     "iopub.status.busy": "2021-12-30T06:16:11.544148Z",
     "iopub.status.idle": "2021-12-30T06:16:11.555724Z",
     "shell.execute_reply": "2021-12-30T06:16:11.554961Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.544746Z"
    }
   },
   "outputs": [],
   "source": [
    "#Loading Libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly.express as px\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "import warnings\n",
    "warnings.simplefilter(action = \"ignore\") \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Loading Dataset**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.55729Z",
     "iopub.status.busy": "2021-12-30T06:16:11.556891Z",
     "iopub.status.idle": "2021-12-30T06:16:11.626268Z",
     "shell.execute_reply": "2021-12-30T06:16:11.625158Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.557261Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Breathing Problem</th>\n",
       "      <th>Fever</th>\n",
       "      <th>Dry Cough</th>\n",
       "      <th>Sore throat</th>\n",
       "      <th>Running Nose</th>\n",
       "      <th>Asthma</th>\n",
       "      <th>Chronic Lung Disease</th>\n",
       "      <th>Headache</th>\n",
       "      <th>Heart Disease</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>...</th>\n",
       "      <th>Fatigue</th>\n",
       "      <th>Gastrointestinal</th>\n",
       "      <th>Abroad travel</th>\n",
       "      <th>Contact with COVID Patient</th>\n",
       "      <th>Attended Large Gathering</th>\n",
       "      <th>Visited Public Exposed Places</th>\n",
       "      <th>Family working in Public Exposed Places</th>\n",
       "      <th>Wearing Masks</th>\n",
       "      <th>Sanitization from Market</th>\n",
       "      <th>COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5429</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5430</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5431</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5432</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5433</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5434 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Breathing Problem Fever Dry Cough Sore throat Running Nose Asthma  \\\n",
       "0                  Yes   Yes       Yes         Yes          Yes     No   \n",
       "1                  Yes   Yes       Yes         Yes           No    Yes   \n",
       "2                  Yes   Yes       Yes         Yes          Yes    Yes   \n",
       "3                  Yes   Yes       Yes          No           No    Yes   \n",
       "4                  Yes   Yes       Yes         Yes          Yes     No   \n",
       "...                ...   ...       ...         ...          ...    ...   \n",
       "5429               Yes   Yes        No         Yes          Yes    Yes   \n",
       "5430               Yes   Yes       Yes          No          Yes    Yes   \n",
       "5431               Yes   Yes       Yes          No           No     No   \n",
       "5432               Yes   Yes       Yes          No          Yes     No   \n",
       "5433               Yes   Yes       Yes          No          Yes    Yes   \n",
       "\n",
       "     Chronic Lung Disease Headache Heart Disease Diabetes  ... Fatigue   \\\n",
       "0                      No       No            No      Yes  ...      Yes   \n",
       "1                     Yes      Yes            No       No  ...      Yes   \n",
       "2                     Yes      Yes            No      Yes  ...      Yes   \n",
       "3                      No       No           Yes      Yes  ...       No   \n",
       "4                     Yes      Yes           Yes      Yes  ...       No   \n",
       "...                   ...      ...           ...      ...  ...      ...   \n",
       "5429                  Yes       No            No       No  ...      Yes   \n",
       "5430                   No      Yes            No      Yes  ...      Yes   \n",
       "5431                   No       No           Yes       No  ...       No   \n",
       "5432                   No      Yes           Yes       No  ...       No   \n",
       "5433                   No      Yes            No      Yes  ...      Yes   \n",
       "\n",
       "     Gastrointestinal  Abroad travel Contact with COVID Patient  \\\n",
       "0                  Yes            No                        Yes   \n",
       "1                   No            No                         No   \n",
       "2                  Yes           Yes                         No   \n",
       "3                   No           Yes                         No   \n",
       "4                  Yes            No                        Yes   \n",
       "...                ...           ...                        ...   \n",
       "5429               Yes            No                         No   \n",
       "5430                No            No                         No   \n",
       "5431                No            No                         No   \n",
       "5432                No            No                         No   \n",
       "5433                No            No                         No   \n",
       "\n",
       "     Attended Large Gathering Visited Public Exposed Places  \\\n",
       "0                          No                           Yes   \n",
       "1                         Yes                           Yes   \n",
       "2                          No                            No   \n",
       "3                         Yes                           Yes   \n",
       "4                          No                           Yes   \n",
       "...                       ...                           ...   \n",
       "5429                       No                            No   \n",
       "5430                       No                            No   \n",
       "5431                       No                            No   \n",
       "5432                       No                            No   \n",
       "5433                       No                            No   \n",
       "\n",
       "     Family working in Public Exposed Places Wearing Masks  \\\n",
       "0                                        Yes            No   \n",
       "1                                         No            No   \n",
       "2                                         No            No   \n",
       "3                                         No            No   \n",
       "4                                         No            No   \n",
       "...                                      ...           ...   \n",
       "5429                                      No            No   \n",
       "5430                                      No            No   \n",
       "5431                                      No            No   \n",
       "5432                                      No            No   \n",
       "5433                                      No            No   \n",
       "\n",
       "     Sanitization from Market COVID-19  \n",
       "0                          No      Yes  \n",
       "1                          No      Yes  \n",
       "2                          No      Yes  \n",
       "3                          No      Yes  \n",
       "4                          No      Yes  \n",
       "...                       ...      ...  \n",
       "5429                       No      Yes  \n",
       "5430                       No      Yes  \n",
       "5431                       No       No  \n",
       "5432                       No       No  \n",
       "5433                       No       No  \n",
       "\n",
       "[5434 rows x 21 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Loading Dataset\n",
    "covid = pd.read_csv(r'Covid Dataset.csv')\n",
    "covid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.629155Z",
     "iopub.status.busy": "2021-12-30T06:16:11.628715Z",
     "iopub.status.idle": "2021-12-30T06:16:11.660374Z",
     "shell.execute_reply": "2021-12-30T06:16:11.659474Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.629106Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5434 entries, 0 to 5433\n",
      "Data columns (total 21 columns):\n",
      " #   Column                                   Non-Null Count  Dtype \n",
      "---  ------                                   --------------  ----- \n",
      " 0   Breathing Problem                        5434 non-null   object\n",
      " 1   Fever                                    5434 non-null   object\n",
      " 2   Dry Cough                                5434 non-null   object\n",
      " 3   Sore throat                              5434 non-null   object\n",
      " 4   Running Nose                             5434 non-null   object\n",
      " 5   Asthma                                   5434 non-null   object\n",
      " 6   Chronic Lung Disease                     5434 non-null   object\n",
      " 7   Headache                                 5434 non-null   object\n",
      " 8   Heart Disease                            5434 non-null   object\n",
      " 9   Diabetes                                 5434 non-null   object\n",
      " 10  Hyper Tension                            5434 non-null   object\n",
      " 11  Fatigue                                  5434 non-null   object\n",
      " 12  Gastrointestinal                         5434 non-null   object\n",
      " 13  Abroad travel                            5434 non-null   object\n",
      " 14  Contact with COVID Patient               5434 non-null   object\n",
      " 15  Attended Large Gathering                 5434 non-null   object\n",
      " 16  Visited Public Exposed Places            5434 non-null   object\n",
      " 17  Family working in Public Exposed Places  5434 non-null   object\n",
      " 18  Wearing Masks                            5434 non-null   object\n",
      " 19  Sanitization from Market                 5434 non-null   object\n",
      " 20  COVID-19                                 5434 non-null   object\n",
      "dtypes: object(21)\n",
      "memory usage: 891.6+ KB\n"
     ]
    }
   ],
   "source": [
    "#To check Null Value in Dataset\n",
    "covid.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.662407Z",
     "iopub.status.busy": "2021-12-30T06:16:11.661912Z",
     "iopub.status.idle": "2021-12-30T06:16:11.67016Z",
     "shell.execute_reply": "2021-12-30T06:16:11.668797Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.662364Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Breathing Problem', 'Fever', 'Dry Cough', 'Sore throat',\n",
       "       'Running Nose', 'Asthma', 'Chronic Lung Disease', 'Headache',\n",
       "       'Heart Disease', 'Diabetes', 'Hyper Tension', 'Fatigue ',\n",
       "       'Gastrointestinal ', 'Abroad travel', 'Contact with COVID Patient',\n",
       "       'Attended Large Gathering', 'Visited Public Exposed Places',\n",
       "       'Family working in Public Exposed Places', 'Wearing Masks',\n",
       "       'Sanitization from Market', 'COVID-19'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To check columns name in dataset\n",
    "covid.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.672015Z",
     "iopub.status.busy": "2021-12-30T06:16:11.67174Z",
     "iopub.status.idle": "2021-12-30T06:16:11.688165Z",
     "shell.execute_reply": "2021-12-30T06:16:11.687181Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.671974Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Yes    4383\n",
       "No     1051\n",
       "Name: COVID-19, dtype: int64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To count number of Yes and No in Covide-19 column\n",
    "covid['COVID-19'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**We can see that the dataset is imbalance**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Data Vizualisation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.690187Z",
     "iopub.status.busy": "2021-12-30T06:16:11.689463Z",
     "iopub.status.idle": "2021-12-30T06:16:11.888773Z",
     "shell.execute_reply": "2021-12-30T06:16:11.888056Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.690153Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='COVID-19', ylabel='count'>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Distribution of target variable\n",
    "sns.countplot(x='COVID-19',data=covid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:11.89033Z",
     "iopub.status.busy": "2021-12-30T06:16:11.889982Z",
     "iopub.status.idle": "2021-12-30T06:16:12.230767Z",
     "shell.execute_reply": "2021-12-30T06:16:12.230161Z",
     "shell.execute_reply.started": "2021-12-30T06:16:11.890302Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Percentage of COVID Positive')"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Distribution of target variable (COVID-19) in percentage\n",
    "covid[\"COVID-19\"].value_counts().plot.pie(explode=[0.1,0.5],autopct='%1.2f%%',shadow=True)\n",
    "plt.title('Percentage of COVID Positive')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:12.232318Z",
     "iopub.status.busy": "2021-12-30T06:16:12.231955Z",
     "iopub.status.idle": "2021-12-30T06:16:12.237579Z",
     "shell.execute_reply": "2021-12-30T06:16:12.236754Z",
     "shell.execute_reply.started": "2021-12-30T06:16:12.232275Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Breathing Problem', 'Fever', 'Dry Cough', 'Sore throat', 'Running Nose', 'Asthma', 'Chronic Lung Disease', 'Headache', 'Heart Disease', 'Diabetes', 'Hyper Tension', 'Fatigue ', 'Gastrointestinal ', 'Abroad travel', 'Contact with COVID Patient', 'Attended Large Gathering', 'Visited Public Exposed Places', 'Family working in Public Exposed Places', 'Wearing Masks', 'Sanitization from Market']\n"
     ]
    }
   ],
   "source": [
    "#Selecting features\n",
    "features = covid.columns.tolist()\n",
    "features.remove('COVID-19')\n",
    "print(features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:12.241068Z",
     "iopub.status.busy": "2021-12-30T06:16:12.240798Z",
     "iopub.status.idle": "2021-12-30T06:16:16.252847Z",
     "shell.execute_reply": "2021-12-30T06:16:16.251896Z",
     "shell.execute_reply.started": "2021-12-30T06:16:12.241039Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAEICAYAAACuxNj9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAdyUlEQVR4nO3de5QV5b3m8e/DRUCRicSWII1pQjByCWJoWRqTieIFYhJRGQ14AaNniB5QmTiJYZxEootzTNTE4DUaUYkkyIka0EE9ihqHExQbRa6ijBLsgIDkGG0vKO1v/thv4xY2XY307t1NP5+19tpVv3qr6i1s++mqt3ZtRQRmZmb1aVPqDpiZWfPnsDAzs0wOCzMzy+SwMDOzTA4LMzPL5LAwM7NMRQsLSR0lLZT0gqTlkn6W6pMl/U3S4vQ6MW+dSZJWS1olaVhefbCkpWnZVEkqVr/NzGxHKtbnLNIv9H0iokZSe2A+cDEwHKiJiGu2a98P+AMwBDgQeAw4OCJqJS1M6z4NzAWmRsRD9e1///33j4qKikY+KjOzPduiRYveiIiy7evtirXDyKVQTZptn171JdMIYGZEbAFelbQaGCJpDdAlIhYASJoOnAzUGxYVFRVUVVXt1jGYmbU2kv5aqF7UMQtJbSUtBjYCj0bEM2nRBElLJE2TtF+q9QBey1u9OtV6pOnt62Zm1kSKGhYRURsRg4BycmcJA4Cbgd7AIGA9cG1qXmgcIuqp70DSOElVkqo2bdq0m703M7M6TXI3VES8CTwJDI+IDSlEPgJuIzdGAbkzhp55q5UD61K9vEC90H5ujYjKiKgsK9vhkpuZmX1KRRuzkFQGfBgRb0rqBBwH/FxS94hYn5qdAixL03OA30v6JbkB7j7AwjTA/bakI4BngDHA9cXqt5kZwIcffkh1dTXvv/9+qbtSFB07dqS8vJz27ds3qH3RwgLoDtwlqS25M5hZEfGgpN9JGkTuUtIa4PsAEbFc0ixgBbAVGB8RtWlbFwB3Ap3IDWzXO7htZra7qqur2XfffamoqGBPu1s/Iti8eTPV1dX06tWrQesU826oJcBhBepn17POFGBKgXoVMKBRO2hmVo/3339/jwwKAEl89rOfZVfGdv0JbjOzndgTg6LOrh6bw8LMzDI5LMzMdsHrr7/OqFGj6N27N/369ePEE0/kpZdeYvny5QwdOpSDDz6YPn36cOWVVxIRPPnkkxx55JGf2MbWrVvp1q0b69ev55xzzuGPf/wjAEcffTRf+tKXGDhwIIcccggTJkzgzTffLNiPF198kSOPPJIOHTpwzTWfeCAGv/71rxkwYAD9+/fnuuuua5TjLuYAd4s2+IfTS92FZmPR1WNK3QWzZiEiOOWUUxg7diwzZ84EYPHixWzYsIFzzjmHm2++mRNOOIF3332XkSNHctNNN3HBBRdQXV3NmjVrqHsE0WOPPcaAAQPo3r37DvuYMWMGlZWVfPDBB0yaNIkRI0bw5z//eYd2Xbt2ZerUqfzpT3/6RH3ZsmXcdtttLFy4kL322ovhw4fzrW99iz59+uzWsfvMwsysgZ544gnat2/P+eefv602aNAgXnrpJY466ihOOOEEAPbee29uuOEGrrrqKtq0acNpp53GPffcs22dmTNnMnr06Hr3tddee/GLX/yCtWvX8sILL+yw/IADDuDwww/f4dbXlStXcsQRR7D33nvTrl07vvGNb3D//ffvzmEDDgszswZbtmwZgwcP3qG+fPnyHeq9e/empqaGt956i9GjR287E9myZQtz585l5MiRmftr27Ythx56KC+++GKD+zhgwACeeuopNm/ezLvvvsvcuXN57bXXslfM4MtQZma7KSJ2eneRJA4//HBqampYtWrVtr/899tvv4LtC217V/Tt25dLL72U448/ns6dO3PooYfSrt3u/6r3mYWZWQP179+fRYsWFaxv/5TrV155hc6dO7PvvvsCMGrUKGbOnNmgS1B1amtrWbp0KX379uXGG29k0KBBDBo0iHXrCj7xaJvzzjuP5557jqeeeoquXbvu9ngFOCzMzBps6NChbNmyhdtuu21b7dlnn6VPnz7Mnz+fxx57DID33nuPiy66iB/96Efb2o0ePZq7776bxx9/nJNOOilzXx9++CGTJk2iZ8+eDBw4kPHjx7N48WIWL17MgQceWO+6GzduBGDt2rXcd999DQ6n+vgylJlZA0ni/vvvZ+LEiVx11VV07NiRiooKrrvuOmbPns2FF17I+PHjqa2t5eyzz2bChAnb1u3Xrx977703gwcPZp999tnpPs4880w6dOjAli1bOO6445g9e3bBdq+//jqVlZW89dZbtGnThuuuu44VK1bQpUsXRo4cyebNm2nfvj033nhjgy951XvsxfqmvFKr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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAEGCAYAAACUzrmNAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAZhUlEQVR4nO3de7SVdb3v8feXixAiHVHECxbmIeMSYi7JS+0Ur93ESyrkBcuz2Tog4tQ+FtuTMmpzjpXuFK9pYnp0b+SoeMusvB+PlqKRXLzkMcOVqEjbbWig4Pf8MR9gAQueSay55lys92uMOdac3+f3PM93Mtbgs57L/M3ITCRJ2pQu9W5AktT4DAtJUinDQpJUyrCQJJUyLCRJpbrVu4Fa2XHHHXPgwIH1bkOSOpQnn3zyjczst359qw2LgQMHMmfOnHq3IUkdSkT8sbW6p6EkSaUMC0lSKcNCklRqq71mIUlb4r333qO5uZnly5fXu5Wa6NmzJwMGDKB79+5VjTcsJKkVzc3NbLfddgwcOJCIqHc7bSozWbp0Kc3Nzeyxxx5VreNpKElqxfLly9lhhx22uqAAiAh22GGHzTpqMiwkaSO2xqBYbXPfm2EhSSplWEjSZnj11VcZM2YMe+65J0OGDOFzn/sczz//PAsWLGDUqFF89KMfZdCgQXzve98jM3nwwQc54IAD1tnGypUr6d+/P4sXL+b000/n5ptvBuDggw9mr732Yvjw4XzsYx9j4sSJvPnmm6328eyzz3LAAQfQo0cPLrjggnWWXXzxxQwbNoyhQ4dy0UUXtcn79gL3Ruz7366vdwsN48kfnlbvFqSGkJkce+yxjBs3jpkzZwIwd+5cXnvtNU4//XSuuOIKjjjiCN555x2OP/54Lr/8cs466yyam5t56aWXWD0F0b333suwYcPYZZddNtjHjTfeSFNTE++++y5Tpkxh9OjRPPTQQxuM69u3L9OnT+e2225bpz5//nyuvvpqHn/8cbbZZhuOOuooPv/5zzNo0KAteu8eWUhSlR544AG6d+/OmWeeuaY2YsQInn/+eQ466CCOOOIIAHr16sWll17K+eefT5cuXTjhhBO46aab1qwzc+ZMxo4du8l9bbPNNvzgBz9g0aJF/O53v9tg+U477cR+++23wa2vzzzzDPvvvz+9evWiW7dufOYzn2H27Nlb8rYBw0KSqjZ//nz23XffDeoLFizYoL7nnnuybNky3nrrLcaOHbvmSGTFihXcfffdHH/88aX769q1K3vvvTfPPvts1T0OGzaMhx9+mKVLl/LOO+9w99138/LLL1e9/sZ4GkqStlBmbvTuoohgv/32Y9myZTz33HNr/vLffvvtq9725hg8eDDf+ta3OPzww+nduzd777033bpt+X/1HllIUpWGDh3Kk08+2Wp9/VmuX3zxRXr37s12220HwJgxY5g5c2ZVp6BWW7VqFfPmzWPw4MFcdtlljBgxghEjRvDKK69scr0zzjiDp556iocffpi+fftu8fUKMCwkqWqjRo1ixYoVXH311WtqTzzxBIMGDeKRRx7h3nvvBeCvf/0rkyZN4uyzz14zbuzYsdxwww3cf//9HH300aX7eu+995gyZQq77747w4cPZ8KECcydO5e5c+ey6667bnLd119/HYBFixZx6623Vh1Om+JpKEmqUkQwe/ZsJk+ezPnnn0/Pnj0ZOHAgF110Ebfffjtf+9rXmDBhAqtWreLUU09l4sSJa9YdMmQIvXr1Yt9992Xbbbfd6D5OPvlkevTowYoVKzjssMO4/fbbWx336quv0tTUxFtvvUWXLl246KKLWLhwIX369OH4449n6dKldO/encsuu6zqU16bfO+bez6so2hqasot+fIjb51dy1tn1Rk988wzDB48uN5t1FRr7zEinszMpvXHehpKklTKsJAklTIsJEmlDAtJUinDQpJUyrCQJJXycxaStBna+rb6slvTM5NPf/rTnHPOOXz2s58FYNasWcyYMYN77rmnTXvZFMNCkhpYRHDllVdywgkncMghh7Bq1SrOOeecdg0KMCwkqeENGzaML37xi3z/+9/n7bff5pRTTmHatGnMmzePlStXMnXqVEaPHs2CBQv4yle+wrvvvsv777/PLbfc0ibzQoFhIUkdwnnnnccnPvEJttlmG77whS8watQoZsyYwZtvvsnIkSM57LDDuPLKK/n617/OySefzLvvvsuqVavabP+GhSR1ANtuuy0nnXQSvXv3ZtasWdx5551rvk51+fLlLFq0iAMOOIBp06bR3NzMcccd12ZHFWBYSFKH0aVLF7p06UJmcsstt7DXXnuts3zw4MF88pOf5Gc/+xlHHnkkP/nJTxg1alTb7LtNtiJJajdHHnkkl1xyyZovRvrtb38LVL5D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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAEGCAYAAACUzrmNAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAXeElEQVR4nO3de7RVdb338feXu4qcI4qmYG30kHE5SLElzXoyNLGbmBwNwlt6Hk4OyHjqeVKOT+nIwRlkWorXNDVNOshITU2zvObw5DkKRly85TDDfURBeszwAkLf5489wS2sveci9tprb/b7NcYaa63v/M01v8uxhx/mb841Z2QmkiS1pUe9G5AkdX6GhSSplGEhSSplWEiSShkWkqRSverdQK3sscce2dDQUO82JKlLWbRo0SuZOWjL+g4bFg0NDSxcuLDebUhSlxIRf6xUdxpKklTKsJAklTIsJEmldthjFpK0Pd5++22ampp466236t1KTfTr148hQ4bQu3fvqsYbFpJUQVNTE7vuuisNDQ1ERL3baVeZyZo1a2hqamLo0KFVreM0lCRV8NZbb7H77rvvcEEBEBHsvvvu27TXZFhIUit2xKDYZFu/m2EhSSplWEjSNnjppZeYPHky+++/PyNGjODTn/40zzzzDMuXL2f8+PG8//3vZ9iwYZx33nlkJg8++CCHHHLIuz5jw4YN7LXXXqxcuZJTTjmFn/70pwAcdthhHHDAAYwePZoPfOADzJgxg1dffbViH0899RSHHHIIffv25YILLnjXsosvvphRo0YxcuRILrroonb53h7glrqgsf/nhnq30Gks+u5JHbatzOTzn/88J598MvPnzwdg8eLFvPzyy5xyyilcccUVHHnkkbzxxhtMmjSJyy+/nNNPP52mpiaef/55Nl2C6N5772XUqFHsvffeW21j3rx5NDY2sn79embNmsXEiRP59a9/vdW4gQMHMnfuXH72s5+9q75s2TKuvvpqHn30Ufr06cNRRx3FZz7zGYYNG7Zd3909C0mq0gMPPEDv3r358pe/vLk2ZswYnnnmGQ499FCOPPJIAHbeeWcuvfRS5syZQ48ePTjuuOO46aabNq8zf/58pkyZ0ua2+vTpw/nnn8+KFSv43e9+t9XyPffck4MOOmirU1+ffPJJDj74YHbeeWd69erFxz/+cW699dbt+dqAYSFJVVu2bBljx47dqr58+fKt6vvvvz9r167ltddeY8qUKZv3RNatW8ddd93FpEmTSrfXs2dPDjzwQJ566qmqexw1ahQPPfQQa9as4Y033uCuu+7ihRdeqHr91jgNJUnbKTNbPbsoIjjooINYu3YtTz/99OZ/+e+2225Vf/a2GD58OGeeeSaf/OQn6d+/PwceeCC9em3//+rds5CkKo0cOZJFixZVrG95levnnnuO/v37s+uuuwIwefJk5s+fX9UU1CYbN25k6dKlDB8+nMsuu4wxY8YwZswYXnzxxTbXO+2003j88cd56KGHGDhw4HYfrwDDQpKqNn78eNatW8fVV1+9ufbYY48xbNgwHn74Ye69914A3nzzTc444wy+8Y1vbB43ZcoUbrzxRu6//36OPvro0m29/fbbzJo1i3333ZfRo0czffp0Fi9ezOLFi9lnn33aXHfVqlUArFixgltuuaXqcGqL01CSVKWI4NZbb2XmzJnMmTOHfv360dDQwEUXXcRtt93GV77yFaZPn87GjRs58cQTmTFjxuZ1R4wYwc4778zYsWPZZZddWt3G1KlT6du3L+vWreOII47gtttuqzjupZdeorGxkddee40ePXpw0UUX8cQTTzBgwAAmTZrEmjVr6N27N5dddlnVU15tfvdtnQ/rKhobG9ObH2lH5amz76jVqbNPPvkkw4cPr8lndxaVvmNELMrMxi3HOg0lSSplWEiSShkWkqRSHuBuhXPC7+jIyylI6pzcs5AklTIsJEmlnIaSpG3Q3lPUZdO8mcnHPvYxzj77bD71qU8BsGDBAq699lruvvvudu2lLYaFJHViEcGVV17Jcccdxyc+8Qk2btzI2Wef3aFBAYaFJHV6o0aN4nOf+xzf+c53eP311znhhBOYPXs2S5cuZcOGDZx77rlMnDiR5cuX86UvfYn169fz17/+lZtvvrldrgsFhoUkdQnnnHMOH/rQh+jTpw+f/exnGT9+PNdeey2vvvoq48aN44gjjuDKK6/kq1/9KlOnTmX9+vVs3Lix3bZvWEhSF7DLLrvwhS98gf79+7NgwQLuuOOOzbdTfeutt1ixYgWHHHIIs2fPpqmpiWOPPbbd9irAsJCkLqNHjx706NGDzOTmm2/mgAMOeNfy4cOH8+EPf5g777yTCRMm8MMf/pDx48e3z7bb5VMqiIh9I+KBiHgyIpZHxFeL+sCIuCcifl8879ZinVkR8WxEPB0RE1rUx0bE0mLZ3GjtLiOS1A1MmDCBSy65ZPONkX77298CzffQ2G+//TjjjDM4+uijWbJkSbtts5Z7FhuAr2fm4xGxK7AoIu4BTgHuy8w5EXEWcBZwZkSMACYDI4F9gHsj4v2ZuRG4ApgG/CdwF3AU8Isa9i5JFXWGKxp885vfZObMmYwePZrMpKGhgZ///OfcdNNN3HjjjfTu3Zv3vOc9fOtb32q3bdYsLDJzJbCyeP2XiHgSGAxMBA4rhl0PPAicWdTnZ+Y64A8R8SwwLiKeBwZk5iMAEXEDcAyGhaRu5txzz938+gc/+MFWy2fNmsWsWbNqsu0O+QV3RDQAHwT+C9irCJJNgbJnMWww0PKu4k1FbXDxest6pe1Mi4iFEbFw9erV7fodJKk7q3lYRER/4GZgZma+1tbQCrVso751MfOqzGzMzMZBgwZte7OSpIpqGhYR0ZvmoJiXmbcU5ZcjYu9i+d7AqqLeBOzbYvUhwItFfUiFuiSpg9TybKgArgGezMzvtVh0O3By8fpk4LYW9ckR0TcihgLDgEeLqaq/RMTBxWee1GIdSVIHqOXZUIcCJwJLI2JxUftXYA6wICJOA1YAxwFk5vKIWAA8QfOZVNOLM6EATgd+BOxE84FtD25LUgeq5dlQD1P5eAPA4a2sMxuYXaG+EBjVft1JkraFv+CWpG2w4tv/2K6f995vLS0dExF87Wtf48ILLwTgggsuYO3ate86lbbWvPmRJHVyffv25ZZbbuGVV16pWw+GhSR1cr169WLatGl8//vf32rZH//4Rw4//HBGjx7N4YcfzooVK2rSg2EhSV3A9OnTmTdvHn/+85/fVZ8xYwYnnXQSS5YsYerUqZxxxhk12b5hIUldwIABAzjppJOYO3fuu+qPPPIIX/ziFwE48cQTefjhh2uyfcNCkrqImTNncs011/D666+3OqZWF+U2LCSpixg4cCDHH38811xzzebaRz7yEebPnw/AvHnz+OhHP1qTbXvqrCRtg2pOda2lr3/961x66aWb38+dO5dTTz2V7373uwwaNIjrrruuJts1LCSpk1u7du3m13vttRdvvPHG5vcNDQ3cf//9Ne/BaShJUinDQpJUyrCQpFZsusf1jmhbv5thIUkV9OvXjzVr1uyQgZGZrFmzhn79+lW9jge4JamCIUOG0NTUxI56i+Z+/foxZMiQ8oEFw0KSKujduzdDhw6tdxudhtNQkqRShoUkqZRhIUkqZVhIkkoZFpKkUoaFJKmUYSFJKmVYSJJKGRaSpFKGhSSplGEhSSplWEiSShkWkqRShoUkqZRhIUkqZVhIkkoZFpKkUoaFJKmUYSFJKmVYSJJKGRaSpFKGhSSpVM3CIiKujYhVEbGsRe3ciPjviFhcPD7dYtmsiHg2Ip6OiAkt6mMjYmmxbG5ERK16liRVVss9ix8BR1Wofz8zxxSPuwAiYgQwGRhZrHN5RPQsxl8BTAOGFY9KnylJqqGahUVmPgT8qcrhE4H5mbkuM/8APAuMi4i9gQGZ+UhmJnADcExNGpYktaoexyxmRMSSYppqt6I2GHihxZimoja4eL1lvaKImBYRCyNi4erVq9u7b0nqtjo6LK4A9gfGACuBC4t6peMQ2Ua9osy8KjMbM7Nx0KBB29mqJGmTDg2LzHw5Mzdm5l+Bq4FxxaImYN8WQ4cALxb1IRXqkqQO1KFhURyD2OTzwKYzpW4HJkdE34gYSvOB7EczcyXwl4g4uDgL6iTgto7sWZIEvWr1wRHx78BhwB4R0QScAxwWEWNonkp6HvgXgMxcHhELgCeADcD0zNxYfNTpNJ9ZtRPwi+IhSepANQuLzJxSoXxNG+NnA7Mr1BcCo9qxNUnSNvIX3JKkUoaFJKmUYSFJKmVYSJJKGRaSpFKGhSSplGEhSSplWEiSShkWkqRShoUkqZRhIUkqZVhIkkpVFRYRcV81NUnSjqnNq85GRD9gZ5ovM74b79y5bgCwT417kyR1EmWXKP8XYCbNwbCId8LiNeCy2rUlSepM2gyLzLwYuDgivpKZl3RQT5KkTqaqmx9l5iUR8RGgoeU6mXlDjfqSJHUiVYVFRPwY2B9YDGy63WkChoUkdQPV3la1ERiRmVnLZiRJnVO1v7NYBrynlo1Ikjqvavcs9gCeiIhHgXWbipl5dE26kiR1KtWGxbm1bEKS1LlVezbUr2vdiCSp86r2bKi/0Hz2E0AfoDfwemYOqFVjkqTOo9o9i11bvo+IY4BxtWhIktT5/E1Xnc3MnwHj27cVSVJnVe001LEt3vag+XcX/uZCkrqJas+G+lyL1xuA54GJ7d6NJKlTqvaYxZdq3YgkqfOq9uZHQyLi1ohYFREvR8TNETGk1s1JkjqHag9wXwfcTvN9LQYDdxQ1SVI3UG1YDMrM6zJzQ/H4ETCohn1JkjqRasPilYg4ISJ6Fo8TgDW1bEyS1HlUGxanAscDLwErgX8CPOgtSd1EtafOngecnJn/DyAiBgIX0BwikqQdXLV7FqM3BQVAZv4J+GBtWpIkdTbVhkWPiNht05tiz6LavRJJUhdXbVhcCPwmIs6LiG8DvwHOb2uFiLi2+F3Gsha1gRFxT0T8vnhuGUCzIuLZiHg6Iia0qI+NiKXFsrkREdv2FSVJ26uqsMjMG4BJwMvAauDYzPxxyWo/Ao7aonYWcF9mDgPuK94TESOAycDIYp3LI6Jnsc4VwDRgWPHY8jMlSTVW9VRSZj4BPLEN4x+KiIYtyhOBw4rX1wMPAmcW9fmZuQ74Q0Q8C4yLiOeBAZn5CEBE3AAcA/yi2j4kSdvvb7pE+XbYKzNXAhTPexb1wcALLcY1FbXBxest6xVFxLSIWBgRC1evXt2ujUtSd9bRYdGaSschso16RZl5VWY2ZmbjoEH+wFyS2ktHh8XLEbE3QPG8qqg3Afu2GDcEeLGoD6lQlyR1oI4Oi9uBk4vXJwO3tahPjoi+ETGU5gPZjxZTVX+JiIOLs6BOarGOJKmD1Oy3EhHx7zQfzN4jIpqAc4A5wIKIOA1YARwHkJnLI2IBzQfQNwDTM3Nj8VGn03xm1U40H9j24LYkdbCahUVmTmll0eGtjJ8NzK5QXwiMasfWJEnbqLMc4JYkdWKGhSSplGEhSSplWEiSShkWkqRShoUkqZRhIUkqZVhIkkoZFpKkUoaFJKmUYSFJKmVYSJJKGRaSpFKGhSSplGEhSSplWEiSShkWkqRShoUkqZRhIUkqZVhIkkoZFpKkUoaFJKmUYSFJKmVYSJJKGRaSpFKGhSSplGEhSSplWEiSShkWkqRShoUkqZRhIUkq1aveDUjS9ljx7X+sdwudxnu/tbRmn+2ehSSplGEhSSplWEiSShkWkqRShoUkqVRdwiIino+IpRGxOCIWFrWBEXFPRPy+eN6txfhZEfFsRDwdERPq0bMkdWf13LP4RGaOyczG4v1ZwH2ZOQy4r3hPRIwAJgMjgaOAyyOiZz0alqTuqjNNQ00Eri9eXw8c06I+PzPXZeYfgGeBcR3fniR1X/UKiwR+FRGLImJaUdsrM1cCFM97FvXBwAst1m0qaluJiGkRsTAiFq5evbpGrUtS91OvX3AfmpkvRsSewD0R8VQbY6NCLSsNzMyrgKsAGhsbK46RJG27uuxZZOaLxfMq4Faap5Vejoi9AYrnVcXwJmDfFqsPAV7suG4lSR0eFhGxS0Tsuuk1cCSwDLgdOLkYdjJwW/H6dmByRPSNiKHAMODRju1akrq3ekxD7QXcGhGbtv+TzLw7Ih4DFkTEacAK4DiAzFweEQuAJ4ANwPTM3FiHvrstL9T2jlpeqE3qzDo8LDLzOeDACvU1wOGtrDMbmF3j1iRJrehMp85Kkjopw0KSVMqwkCSVMiwkSaUMC0lSKcNCklTKsJAklTIsJEmlDAtJUinDQpJUyrCQJJUyLCRJpQwLSVIpw0KSVMqwkCSVMiwkSaUMC0lSKcNCklTKsJAklTIsJEmlDAtJUinDQpJUyrCQJJUyLCRJpQwLSVIpw0KSVMqwkCSVMiwkSaUMC0lSKcNCklTKsJAklTIsJEmlDAtJUinDQpJUyrCQJJUyLCRJpQwLSVKpLhMWEXFURDwdEc9GxFn17keSupMuERYR0RO4DPgUMAKYEhEj6tuVJHUfXSIsgHHAs5n5XGauB+YDE+vckyR1G73q3UCVBgMvtHjfBHx4y0ERMQ2YVrxdGxFPd0BvO7z3wR7AK/Xuo1M4J+rdgbbg32cL7fP3+b5Kxa4SFpX+C+RWhcyrgKtq3073EhELM7Ox3n1Ilfj32TG6yjRUE7Bvi/dDgBfr1IskdTtdJSweA4ZFxNCI6ANMBm6vc0+S1G10iWmozNwQETOAXwI9gWszc3md2+pOnNpTZ+bfZweIzK2m/iVJepeuMg0lSaojw0KSVMqwENHs4Yj4VIva8RFxdz37klqKiIyIC1u8/98RcW4dW+pWDAuRzQeuvgx8LyL6RcQuwGxgen07k95lHXBsROxR70a6I8NCAGTmMuAO4EzgHOBG4OyIeCwifhsREwEiYmREPBoRiyNiSUQMq2Pb6l420Hzm0//ackFEvC8i7iv+Ju+LiPd2fHs7Ns+G0mbFHsXjwHrg58DyzLwxIv4eeBT4IDAH+M/MnFf85qVnZr5Zr57VfUTEWmAfYAlwIPA/gf6ZeW5E3AH8NDOvj4hTgaMz85j6dbvjMSz0LhHxbWAtcDzQj+Z/zQEMBCbQHBhnAzcAt2Tm7+vRp7qfiFibmf2Lv9G3gTd5JyxeAfbOzLcjojewMjOdrmpHXeJHeepQfy0eAUzKzC0vxvhkRPwX8BnglxHxz5l5f0c3qW7tIpr3gK9rY4z/Cm5nHrNQa34JfCUiAiAiPlg87wc8l5lzab7kyuj6tajuKDP/BCwATmtR/g3NlwECmAo83NF97egMC7XmPKA3sCQilhXvAb4ALIuIxcAHaJ6OkjrahTRfmnyTM4AvRcQS4ETgq3XpagfmMQtJUin3LCRJpQwLSVIpw0KSVMqwkCSVMiwkSaUMC6kNEbGxuA7W8oj4XUR8LSJ6FMsaI2JuyfqnRMSl27jNf92enqVa8NRZqQ2bLjFRvN4T+AnwH5l5TpXrnwI0ZuaMv2WbUmfhnoVUpcxcBUwDZhT3ADksIn4OEBHjIuI3xRV6fxMRB7RYdd+IuDsino6IzSETESe0uILvDyKiZ0TMAXYqavPaGNczIn4UEcsiYmlEbHUlVqk9eW0oaRtk5nPFNNSeWyx6CvgfmbkhIo4A/g2YVCwbB4wC3gAei4g7gddp/jX8ocXF7y4HpmbmWRExIzPHAETE8ErjgOXA4MwcVYz7+9p9a8mwkP4WUaH2d8D1xf09kuZLpWxyT2auAYiIW4CP0nw137E0hwfATsCqCp97eCvj7gD2i4hLgDuBX23/15JaZ1hI26C4kOJGmv+HPbzFovOABzLz8xHRADzYYtmWBwaT5sC5PjNnlW2ytXERcSDNl42fTvMl5U+t/ptI28ZjFlKVImIQcCVwaW59ZsjfAf9dvD5li2WfjIiBEbETcAzwH8B9wD8VB80plr+vGL/pngy0Nq64tWiPzLwZ+Cbwofb6nlIl7llIbdupuMJub5qnjn4MfK/CuPNpnob6GrDl/T0eLtb7B+AnmbkQICL+L/Cr4hjI2zTvIfyR5luHLomIxzNzaivj3gSu23QaL1C2hyJtF0+dlSSVchpKklTKsJAklTIsJEmlDAtJUinDQpJUyrCQJJUyLCRJpf4/2VRPIvF7sQgAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Graph between features and target variable\n",
    "for feature in features:\n",
    "    plt.figure()\n",
    "    sns.countplot(x= feature,hue='COVID-19',data=covid)\n",
    "    plt.savefig('covi-1.png')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Observations from above Plots:**\n",
    "1. Breathing problem: Presence of Breathing problem ('Yes') does seem to have an impact among covid positive patience\n",
    "2. Fever: Presence of Fever ('yes') is also very common among covid positive patients 3.Dry Cough: Covid positive people are mostly suffering with Dry Cough\n",
    "3. Sore throat: Covid postive people are also suffering from Sore throat\n",
    "4. Hypertension: Presence or absense of Hypertension doesn't seem to have any distinct impact\n",
    "5. Abroad travel: Although postive patients are there who haven't had any abroad travel, but if a person is having abroad travel, there is almost full chance that the person will have covid-19\n",
    "6. Contact with COVID Patients: people with contact with covid patients are having more chances of being covid positive\n",
    "7. Attended Large Gathering: People who have attended large gatherings, are more probable of getting covid\n",
    "8. Visited public explosed places and family working in public exposed places, although have high positive rate, but doesn't seem to have any greater impact then those who are not exposed to such public places\n",
    "9. Wearing mask and Sanitization from market has only one category i.e., No."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Feature Transformation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.254371Z",
     "iopub.status.busy": "2021-12-30T06:16:16.25415Z",
     "iopub.status.idle": "2021-12-30T06:16:16.258968Z",
     "shell.execute_reply": "2021-12-30T06:16:16.2579Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.254344Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "e=LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.260789Z",
     "iopub.status.busy": "2021-12-30T06:16:16.260516Z",
     "iopub.status.idle": "2021-12-30T06:16:16.352466Z",
     "shell.execute_reply": "2021-12-30T06:16:16.351599Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.26076Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Breathing Problem</th>\n",
       "      <th>Fever</th>\n",
       "      <th>Dry Cough</th>\n",
       "      <th>Sore throat</th>\n",
       "      <th>Running Nose</th>\n",
       "      <th>Asthma</th>\n",
       "      <th>Chronic Lung Disease</th>\n",
       "      <th>Headache</th>\n",
       "      <th>Heart Disease</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>...</th>\n",
       "      <th>Fatigue</th>\n",
       "      <th>Gastrointestinal</th>\n",
       "      <th>Abroad travel</th>\n",
       "      <th>Contact with COVID Patient</th>\n",
       "      <th>Attended Large Gathering</th>\n",
       "      <th>Visited Public Exposed Places</th>\n",
       "      <th>Family working in Public Exposed Places</th>\n",
       "      <th>Wearing Masks</th>\n",
       "      <th>Sanitization from Market</th>\n",
       "      <th>COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Breathing Problem  Fever  Dry Cough  Sore throat  Running Nose  Asthma  \\\n",
       "0                  1      1          1            1             1       0   \n",
       "1                  1      1          1            1             0       1   \n",
       "2                  1      1          1            1             1       1   \n",
       "3                  1      1          1            0             0       1   \n",
       "4                  1      1          1            1             1       0   \n",
       "\n",
       "   Chronic Lung Disease  Headache  Heart Disease  Diabetes  ...  Fatigue   \\\n",
       "0                     0         0              0         1  ...         1   \n",
       "1                     1         1              0         0  ...         1   \n",
       "2                     1         1              0         1  ...         1   \n",
       "3                     0         0              1         1  ...         0   \n",
       "4                     1         1              1         1  ...         0   \n",
       "\n",
       "   Gastrointestinal   Abroad travel  Contact with COVID Patient  \\\n",
       "0                  1              0                           1   \n",
       "1                  0              0                           0   \n",
       "2                  1              1                           0   \n",
       "3                  0              1                           0   \n",
       "4                  1              0                           1   \n",
       "\n",
       "   Attended Large Gathering  Visited Public Exposed Places  \\\n",
       "0                         0                              1   \n",
       "1                         1                              1   \n",
       "2                         0                              0   \n",
       "3                         1                              1   \n",
       "4                         0                              1   \n",
       "\n",
       "   Family working in Public Exposed Places  Wearing Masks  \\\n",
       "0                                        1              0   \n",
       "1                                        0              0   \n",
       "2                                        0              0   \n",
       "3                                        0              0   \n",
       "4                                        0              0   \n",
       "\n",
       "   Sanitization from Market  COVID-19  \n",
       "0                         0         1  \n",
       "1                         0         1  \n",
       "2                         0         1  \n",
       "3                         0         1  \n",
       "4                         0         1  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid['Breathing Problem']=e.fit_transform(covid['Breathing Problem'])\n",
    "covid['Fever']=e.fit_transform(covid['Fever'])\n",
    "covid['Dry Cough']=e.fit_transform(covid['Dry Cough'])\n",
    "covid['Sore throat']=e.fit_transform(covid['Sore throat'])\n",
    "covid['Running Nose']=e.fit_transform(covid['Running Nose'])\n",
    "covid['Asthma']=e.fit_transform(covid['Asthma'])\n",
    "covid['Chronic Lung Disease']=e.fit_transform(covid['Chronic Lung Disease'])\n",
    "covid['Headache']=e.fit_transform(covid['Headache'])\n",
    "covid['Heart Disease']=e.fit_transform(covid['Heart Disease'])\n",
    "covid['Diabetes']=e.fit_transform(covid['Diabetes'])\n",
    "covid['Hyper Tension']=e.fit_transform(covid['Hyper Tension'])\n",
    "covid['Abroad travel']=e.fit_transform(covid['Abroad travel'])\n",
    "covid['Contact with COVID Patient']=e.fit_transform(covid['Contact with COVID Patient'])\n",
    "covid['Attended Large Gathering']=e.fit_transform(covid['Attended Large Gathering'])\n",
    "covid['Visited Public Exposed Places']=e.fit_transform(covid['Visited Public Exposed Places'])\n",
    "covid['Family working in Public Exposed Places']=e.fit_transform(covid['Family working in Public Exposed Places'])\n",
    "covid['Wearing Masks']=e.fit_transform(covid['Wearing Masks'])\n",
    "covid['Sanitization from Market']=e.fit_transform(covid['Sanitization from Market'])\n",
    "covid['COVID-19']=e.fit_transform(covid['COVID-19'])\n",
    "covid['Dry Cough']=e.fit_transform(covid['Dry Cough'])\n",
    "covid['Sore throat']=e.fit_transform(covid['Sore throat'])\n",
    "covid['Gastrointestinal ']=e.fit_transform(covid['Gastrointestinal '])\n",
    "covid['Fatigue ']=e.fit_transform(covid['Fatigue '])\n",
    "covid.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.353882Z",
     "iopub.status.busy": "2021-12-30T06:16:16.353651Z",
     "iopub.status.idle": "2021-12-30T06:16:16.390844Z",
     "shell.execute_reply": "2021-12-30T06:16:16.390007Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.353854Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Breathing Problem</th>\n",
       "      <th>Fever</th>\n",
       "      <th>Dry Cough</th>\n",
       "      <th>Sore throat</th>\n",
       "      <th>Running Nose</th>\n",
       "      <th>Asthma</th>\n",
       "      <th>Chronic Lung Disease</th>\n",
       "      <th>Headache</th>\n",
       "      <th>Heart Disease</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>...</th>\n",
       "      <th>Fatigue</th>\n",
       "      <th>Gastrointestinal</th>\n",
       "      <th>Abroad travel</th>\n",
       "      <th>Contact with COVID Patient</th>\n",
       "      <th>Attended Large Gathering</th>\n",
       "      <th>Visited Public Exposed Places</th>\n",
       "      <th>Family working in Public Exposed Places</th>\n",
       "      <th>Wearing Masks</th>\n",
       "      <th>Sanitization from Market</th>\n",
       "      <th>COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5429</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5430</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5431</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5432</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5433</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5434 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Breathing Problem  Fever  Dry Cough  Sore throat  Running Nose  Asthma  \\\n",
       "0                 False  False      False        False         False   False   \n",
       "1                 False  False      False        False         False   False   \n",
       "2                 False  False      False        False         False   False   \n",
       "3                 False  False      False        False         False   False   \n",
       "4                 False  False      False        False         False   False   \n",
       "...                 ...    ...        ...          ...           ...     ...   \n",
       "5429              False  False      False        False         False   False   \n",
       "5430              False  False      False        False         False   False   \n",
       "5431              False  False      False        False         False   False   \n",
       "5432              False  False      False        False         False   False   \n",
       "5433              False  False      False        False         False   False   \n",
       "\n",
       "      Chronic Lung Disease  Headache  Heart Disease  Diabetes  ...  Fatigue   \\\n",
       "0                    False     False          False     False  ...     False   \n",
       "1                    False     False          False     False  ...     False   \n",
       "2                    False     False          False     False  ...     False   \n",
       "3                    False     False          False     False  ...     False   \n",
       "4                    False     False          False     False  ...     False   \n",
       "...                    ...       ...            ...       ...  ...       ...   \n",
       "5429                 False     False          False     False  ...     False   \n",
       "5430                 False     False          False     False  ...     False   \n",
       "5431                 False     False          False     False  ...     False   \n",
       "5432                 False     False          False     False  ...     False   \n",
       "5433                 False     False          False     False  ...     False   \n",
       "\n",
       "      Gastrointestinal   Abroad travel  Contact with COVID Patient  \\\n",
       "0                 False          False                       False   \n",
       "1                 False          False                       False   \n",
       "2                 False          False                       False   \n",
       "3                 False          False                       False   \n",
       "4                 False          False                       False   \n",
       "...                 ...            ...                         ...   \n",
       "5429              False          False                       False   \n",
       "5430              False          False                       False   \n",
       "5431              False          False                       False   \n",
       "5432              False          False                       False   \n",
       "5433              False          False                       False   \n",
       "\n",
       "      Attended Large Gathering  Visited Public Exposed Places  \\\n",
       "0                        False                          False   \n",
       "1                        False                          False   \n",
       "2                        False                          False   \n",
       "3                        False                          False   \n",
       "4                        False                          False   \n",
       "...                        ...                            ...   \n",
       "5429                     False                          False   \n",
       "5430                     False                          False   \n",
       "5431                     False                          False   \n",
       "5432                     False                          False   \n",
       "5433                     False                          False   \n",
       "\n",
       "      Family working in Public Exposed Places  Wearing Masks  \\\n",
       "0                                       False          False   \n",
       "1                                       False          False   \n",
       "2                                       False          False   \n",
       "3                                       False          False   \n",
       "4                                       False          False   \n",
       "...                                       ...            ...   \n",
       "5429                                    False          False   \n",
       "5430                                    False          False   \n",
       "5431                                    False          False   \n",
       "5432                                    False          False   \n",
       "5433                                    False          False   \n",
       "\n",
       "      Sanitization from Market  COVID-19  \n",
       "0                        False     False  \n",
       "1                        False     False  \n",
       "2                        False     False  \n",
       "3                        False     False  \n",
       "4                        False     False  \n",
       "...                        ...       ...  \n",
       "5429                     False     False  \n",
       "5430                     False     False  \n",
       "5431                     False     False  \n",
       "5432                     False     False  \n",
       "5433                     False     False  \n",
       "\n",
       "[5434 rows x 21 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking Null Value\n",
    "covid.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.3923Z",
     "iopub.status.busy": "2021-12-30T06:16:16.392068Z",
     "iopub.status.idle": "2021-12-30T06:16:16.401372Z",
     "shell.execute_reply": "2021-12-30T06:16:16.400317Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.392272Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int32    19\n",
       "int64     2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid.dtypes.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.403514Z",
     "iopub.status.busy": "2021-12-30T06:16:16.403045Z",
     "iopub.status.idle": "2021-12-30T06:16:16.427995Z",
     "shell.execute_reply": "2021-12-30T06:16:16.427012Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.403465Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5434 entries, 0 to 5433\n",
      "Data columns (total 21 columns):\n",
      " #   Column                                   Non-Null Count  Dtype\n",
      "---  ------                                   --------------  -----\n",
      " 0   Breathing Problem                        5434 non-null   int32\n",
      " 1   Fever                                    5434 non-null   int32\n",
      " 2   Dry Cough                                5434 non-null   int64\n",
      " 3   Sore throat                              5434 non-null   int64\n",
      " 4   Running Nose                             5434 non-null   int32\n",
      " 5   Asthma                                   5434 non-null   int32\n",
      " 6   Chronic Lung Disease                     5434 non-null   int32\n",
      " 7   Headache                                 5434 non-null   int32\n",
      " 8   Heart Disease                            5434 non-null   int32\n",
      " 9   Diabetes                                 5434 non-null   int32\n",
      " 10  Hyper Tension                            5434 non-null   int32\n",
      " 11  Fatigue                                  5434 non-null   int32\n",
      " 12  Gastrointestinal                         5434 non-null   int32\n",
      " 13  Abroad travel                            5434 non-null   int32\n",
      " 14  Contact with COVID Patient               5434 non-null   int32\n",
      " 15  Attended Large Gathering                 5434 non-null   int32\n",
      " 16  Visited Public Exposed Places            5434 non-null   int32\n",
      " 17  Family working in Public Exposed Places  5434 non-null   int32\n",
      " 18  Wearing Masks                            5434 non-null   int32\n",
      " 19  Sanitization from Market                 5434 non-null   int32\n",
      " 20  COVID-19                                 5434 non-null   int32\n",
      "dtypes: int32(19), int64(2)\n",
      "memory usage: 488.3 KB\n"
     ]
    }
   ],
   "source": [
    "covid.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Finding Correlation Between Features**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.430122Z",
     "iopub.status.busy": "2021-12-30T06:16:16.42953Z",
     "iopub.status.idle": "2021-12-30T06:16:16.501595Z",
     "shell.execute_reply": "2021-12-30T06:16:16.500921Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.430082Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_7d9ee_row0_col0, #T_7d9ee_row1_col1, #T_7d9ee_row2_col2, #T_7d9ee_row3_col3, #T_7d9ee_row4_col4, #T_7d9ee_row5_col5, #T_7d9ee_row6_col6, #T_7d9ee_row7_col7, #T_7d9ee_row8_col8, #T_7d9ee_row9_col9, #T_7d9ee_row10_col10, #T_7d9ee_row11_col11, #T_7d9ee_row12_col12, #T_7d9ee_row13_col13, #T_7d9ee_row14_col14, #T_7d9ee_row15_col15, #T_7d9ee_row16_col16, #T_7d9ee_row17_col17, #T_7d9ee_row20_col20 {\n",
       "  background-color: #276419;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col1, #T_7d9ee_row1_col0, #T_7d9ee_row5_col20, #T_7d9ee_row20_col5 {\n",
       "  background-color: #e795c3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col2, #T_7d9ee_row2_col0, #T_7d9ee_row17_col20, #T_7d9ee_row20_col17 {\n",
       "  background-color: #f1b7da;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col3, #T_7d9ee_row3_col0 {\n",
       "  background-color: #fce5f1;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col4, #T_7d9ee_row0_col9, #T_7d9ee_row4_col0, #T_7d9ee_row7_col11, #T_7d9ee_row9_col0, #T_7d9ee_row11_col7 {\n",
       "  background-color: #e181b5;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col5, #T_7d9ee_row1_col5, #T_7d9ee_row5_col0, #T_7d9ee_row5_col1 {\n",
       "  background-color: #e48bbc;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col6, #T_7d9ee_row6_col0 {\n",
       "  background-color: #c01879;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col7, #T_7d9ee_row4_col17, #T_7d9ee_row6_col14, #T_7d9ee_row7_col0, #T_7d9ee_row9_col15, #T_7d9ee_row12_col16, #T_7d9ee_row14_col6, #T_7d9ee_row15_col9, #T_7d9ee_row16_col12, #T_7d9ee_row17_col4 {\n",
       "  background-color: #c92b86;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col8, #T_7d9ee_row0_col12, #T_7d9ee_row8_col0, #T_7d9ee_row12_col0 {\n",
       "  background-color: #c72482;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col10, #T_7d9ee_row3_col10, #T_7d9ee_row4_col9, #T_7d9ee_row6_col9, #T_7d9ee_row7_col13, #T_7d9ee_row9_col4, #T_7d9ee_row9_col6, #T_7d9ee_row9_col10, #T_7d9ee_row10_col0, #T_7d9ee_row10_col3, #T_7d9ee_row10_col9, #T_7d9ee_row13_col7 {\n",
       "  background-color: #df7cb1;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col11, #T_7d9ee_row1_col16, #T_7d9ee_row3_col8, #T_7d9ee_row3_col9, #T_7d9ee_row4_col14, #T_7d9ee_row8_col3, #T_7d9ee_row8_col12, #T_7d9ee_row9_col3, #T_7d9ee_row10_col15, #T_7d9ee_row11_col0, #T_7d9ee_row12_col8, #T_7d9ee_row14_col4, #T_7d9ee_row15_col10, #T_7d9ee_row16_col1 {\n",
       "  background-color: #d75ea1;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col13, #T_7d9ee_row2_col15, #T_7d9ee_row13_col0, #T_7d9ee_row13_col15, #T_7d9ee_row15_col2, #T_7d9ee_row15_col13 {\n",
       "  background-color: #eba1cb;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col14, #T_7d9ee_row2_col3, #T_7d9ee_row3_col2, #T_7d9ee_row3_col15, #T_7d9ee_row14_col0, #T_7d9ee_row15_col3 {\n",
       "  background-color: #f7cbe4;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col15, #T_7d9ee_row15_col0 {\n",
       "  background-color: #f5c6e2;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row0_col16, #T_7d9ee_row1_col15, #T_7d9ee_row4_col7, #T_7d9ee_row5_col13, #T_7d9ee_row7_col4, #T_7d9ee_row13_col5, #T_7d9ee_row13_col16, #T_7d9ee_row15_col1, #T_7d9ee_row16_col0, #T_7d9ee_row16_col13 {\n",
       "  background-color: #e388ba;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col17, #T_7d9ee_row5_col10, #T_7d9ee_row10_col5, #T_7d9ee_row17_col0 {\n",
       "  background-color: #da69a6;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col18, #T_7d9ee_row0_col19, #T_7d9ee_row1_col18, #T_7d9ee_row1_col19, #T_7d9ee_row2_col18, #T_7d9ee_row2_col19, #T_7d9ee_row3_col18, #T_7d9ee_row3_col19, #T_7d9ee_row4_col18, #T_7d9ee_row4_col19, #T_7d9ee_row5_col18, #T_7d9ee_row5_col19, #T_7d9ee_row6_col18, #T_7d9ee_row6_col19, #T_7d9ee_row7_col18, #T_7d9ee_row7_col19, #T_7d9ee_row8_col18, #T_7d9ee_row8_col19, #T_7d9ee_row9_col18, #T_7d9ee_row9_col19, #T_7d9ee_row10_col18, #T_7d9ee_row10_col19, #T_7d9ee_row11_col18, #T_7d9ee_row11_col19, #T_7d9ee_row12_col18, #T_7d9ee_row12_col19, #T_7d9ee_row13_col18, #T_7d9ee_row13_col19, #T_7d9ee_row14_col18, #T_7d9ee_row14_col19, #T_7d9ee_row15_col18, #T_7d9ee_row15_col19, #T_7d9ee_row16_col18, #T_7d9ee_row16_col19, #T_7d9ee_row17_col18, #T_7d9ee_row17_col19, #T_7d9ee_row18_col0, #T_7d9ee_row18_col1, #T_7d9ee_row18_col2, #T_7d9ee_row18_col3, #T_7d9ee_row18_col4, #T_7d9ee_row18_col5, #T_7d9ee_row18_col6, #T_7d9ee_row18_col7, #T_7d9ee_row18_col8, #T_7d9ee_row18_col9, #T_7d9ee_row18_col10, #T_7d9ee_row18_col11, #T_7d9ee_row18_col12, #T_7d9ee_row18_col13, #T_7d9ee_row18_col14, #T_7d9ee_row18_col15, #T_7d9ee_row18_col16, #T_7d9ee_row18_col17, #T_7d9ee_row18_col18, #T_7d9ee_row18_col19, #T_7d9ee_row18_col20, #T_7d9ee_row19_col0, #T_7d9ee_row19_col1, #T_7d9ee_row19_col2, #T_7d9ee_row19_col3, #T_7d9ee_row19_col4, #T_7d9ee_row19_col5, #T_7d9ee_row19_col6, #T_7d9ee_row19_col7, #T_7d9ee_row19_col8, #T_7d9ee_row19_col9, #T_7d9ee_row19_col10, #T_7d9ee_row19_col11, #T_7d9ee_row19_col12, #T_7d9ee_row19_col13, #T_7d9ee_row19_col14, #T_7d9ee_row19_col15, #T_7d9ee_row19_col16, #T_7d9ee_row19_col17, #T_7d9ee_row19_col18, #T_7d9ee_row19_col19, #T_7d9ee_row19_col20, #T_7d9ee_row20_col18, #T_7d9ee_row20_col19 {\n",
       "  background-color: #000000;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row0_col20, #T_7d9ee_row13_col20, #T_7d9ee_row20_col0, #T_7d9ee_row20_col13 {\n",
       "  background-color: #f0f6e7;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row1_col2, #T_7d9ee_row1_col13, #T_7d9ee_row2_col1, #T_7d9ee_row2_col14, #T_7d9ee_row13_col1, #T_7d9ee_row14_col2 {\n",
       "  background-color: #eda8d1;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row1_col3, #T_7d9ee_row3_col1 {\n",
       "  background-color: #fbe9f2;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row1_col4, #T_7d9ee_row2_col10, #T_7d9ee_row3_col5, #T_7d9ee_row4_col1, #T_7d9ee_row5_col3, #T_7d9ee_row10_col2, #T_7d9ee_row15_col16, #T_7d9ee_row16_col15 {\n",
       "  background-color: #e590bf;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col6, #T_7d9ee_row6_col1, #T_7d9ee_row7_col20, #T_7d9ee_row8_col14, #T_7d9ee_row10_col11, #T_7d9ee_row11_col10, #T_7d9ee_row11_col14, #T_7d9ee_row11_col17, #T_7d9ee_row12_col17, #T_7d9ee_row14_col8, #T_7d9ee_row14_col11, #T_7d9ee_row17_col11, #T_7d9ee_row17_col12, #T_7d9ee_row20_col7 {\n",
       "  background-color: #d14895;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col7, #T_7d9ee_row2_col7, #T_7d9ee_row5_col6, #T_7d9ee_row6_col5, #T_7d9ee_row7_col1, #T_7d9ee_row7_col2 {\n",
       "  background-color: #cf4191;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col8, #T_7d9ee_row2_col4, #T_7d9ee_row4_col2, #T_7d9ee_row8_col1, #T_7d9ee_row8_col9, #T_7d9ee_row9_col8, #T_7d9ee_row11_col15, #T_7d9ee_row15_col11 {\n",
       "  background-color: #d04493;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col9, #T_7d9ee_row2_col8, #T_7d9ee_row7_col8, #T_7d9ee_row8_col2, #T_7d9ee_row8_col7, #T_7d9ee_row8_col10, #T_7d9ee_row9_col1, #T_7d9ee_row10_col8, #T_7d9ee_row10_col17, #T_7d9ee_row17_col10 {\n",
       "  background-color: #e07eb3;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col10, #T_7d9ee_row3_col16, #T_7d9ee_row5_col8, #T_7d9ee_row8_col5, #T_7d9ee_row10_col1, #T_7d9ee_row13_col14, #T_7d9ee_row14_col13, #T_7d9ee_row14_col16, #T_7d9ee_row16_col3, #T_7d9ee_row16_col14 {\n",
       "  background-color: #e58dbe;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col11, #T_7d9ee_row4_col8, #T_7d9ee_row6_col20, #T_7d9ee_row8_col4, #T_7d9ee_row8_col11, #T_7d9ee_row11_col1, #T_7d9ee_row11_col8, #T_7d9ee_row20_col6 {\n",
       "  background-color: #ca2f88;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col12, #T_7d9ee_row2_col9, #T_7d9ee_row4_col20, #T_7d9ee_row7_col16, #T_7d9ee_row9_col2, #T_7d9ee_row12_col1, #T_7d9ee_row16_col7, #T_7d9ee_row20_col4 {\n",
       "  background-color: #d5579d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col14, #T_7d9ee_row2_col17, #T_7d9ee_row14_col1, #T_7d9ee_row17_col2 {\n",
       "  background-color: #f2b8db;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row1_col17, #T_7d9ee_row17_col1 {\n",
       "  background-color: #d965a4;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row1_col20, #T_7d9ee_row20_col1 {\n",
       "  background-color: #f9eef4;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row2_col5, #T_7d9ee_row2_col16, #T_7d9ee_row5_col2, #T_7d9ee_row8_col16, #T_7d9ee_row16_col2, #T_7d9ee_row16_col8 {\n",
       "  background-color: #e692c1;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row2_col6, #T_7d9ee_row5_col15, #T_7d9ee_row6_col2, #T_7d9ee_row8_col15, #T_7d9ee_row9_col11, #T_7d9ee_row11_col9, #T_7d9ee_row11_col20, #T_7d9ee_row15_col5, #T_7d9ee_row15_col8, #T_7d9ee_row20_col11 {\n",
       "  background-color: #cd3a8d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row2_col11, #T_7d9ee_row6_col8, #T_7d9ee_row8_col6, #T_7d9ee_row11_col2 {\n",
       "  background-color: #ce3d8f;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row2_col12, #T_7d9ee_row4_col11, #T_7d9ee_row5_col11, #T_7d9ee_row5_col14, #T_7d9ee_row11_col4, #T_7d9ee_row11_col5, #T_7d9ee_row11_col12, #T_7d9ee_row12_col2, #T_7d9ee_row12_col11, #T_7d9ee_row14_col5, #T_7d9ee_row14_col17, #T_7d9ee_row17_col14 {\n",
       "  background-color: #d861a2;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row2_col13, #T_7d9ee_row13_col2 {\n",
       "  background-color: #faebf3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row2_col20, #T_7d9ee_row20_col2 {\n",
       "  background-color: #edf6e1;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row3_col4, #T_7d9ee_row4_col3, #T_7d9ee_row6_col17, #T_7d9ee_row9_col12, #T_7d9ee_row9_col13, #T_7d9ee_row9_col20, #T_7d9ee_row12_col9, #T_7d9ee_row13_col9, #T_7d9ee_row17_col6, #T_7d9ee_row20_col9 {\n",
       "  background-color: #df79b0;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row3_col6, #T_7d9ee_row6_col3, #T_7d9ee_row6_col7, #T_7d9ee_row6_col11, #T_7d9ee_row6_col12, #T_7d9ee_row7_col6, #T_7d9ee_row11_col6, #T_7d9ee_row12_col6 {\n",
       "  background-color: #cc368b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row3_col7, #T_7d9ee_row4_col6, #T_7d9ee_row4_col12, #T_7d9ee_row6_col4, #T_7d9ee_row7_col3, #T_7d9ee_row10_col13, #T_7d9ee_row12_col4, #T_7d9ee_row12_col15, #T_7d9ee_row13_col10, #T_7d9ee_row15_col12 {\n",
       "  background-color: #d34f99;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row3_col11, #T_7d9ee_row4_col5, #T_7d9ee_row4_col10, #T_7d9ee_row5_col4, #T_7d9ee_row6_col15, #T_7d9ee_row8_col13, #T_7d9ee_row10_col4, #T_7d9ee_row11_col3, #T_7d9ee_row13_col8, #T_7d9ee_row15_col6 {\n",
       "  background-color: #d24c97;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row3_col12, #T_7d9ee_row8_col20, #T_7d9ee_row10_col14, #T_7d9ee_row12_col3, #T_7d9ee_row12_col14, #T_7d9ee_row14_col10, #T_7d9ee_row14_col12, #T_7d9ee_row20_col8 {\n",
       "  background-color: #dc70aa;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row3_col13, #T_7d9ee_row13_col3 {\n",
       "  background-color: #f6c7e3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row3_col14, #T_7d9ee_row14_col3 {\n",
       "  background-color: #f5c2e0;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row3_col17, #T_7d9ee_row17_col3 {\n",
       "  background-color: #e99cc8;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row3_col20, #T_7d9ee_row20_col3 {\n",
       "  background-color: #e8f5d5;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row4_col13, #T_7d9ee_row5_col7, #T_7d9ee_row7_col5, #T_7d9ee_row8_col17, #T_7d9ee_row13_col4, #T_7d9ee_row17_col8 {\n",
       "  background-color: #de77ae;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row4_col15, #T_7d9ee_row15_col4 {\n",
       "  background-color: #e283b7;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row4_col16, #T_7d9ee_row7_col9, #T_7d9ee_row9_col7, #T_7d9ee_row16_col4, #T_7d9ee_row16_col17, #T_7d9ee_row17_col16 {\n",
       "  background-color: #dd73ac;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row5_col9, #T_7d9ee_row6_col10, #T_7d9ee_row7_col17, #T_7d9ee_row9_col5, #T_7d9ee_row10_col6, #T_7d9ee_row11_col16, #T_7d9ee_row16_col11, #T_7d9ee_row17_col7 {\n",
       "  background-color: #d4539b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row5_col12, #T_7d9ee_row10_col20, #T_7d9ee_row12_col5, #T_7d9ee_row12_col13, #T_7d9ee_row13_col12, #T_7d9ee_row20_col10 {\n",
       "  background-color: #e89ac6;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row5_col16, #T_7d9ee_row10_col16, #T_7d9ee_row16_col5, #T_7d9ee_row16_col10 {\n",
       "  background-color: #db6ca8;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row5_col17, #T_7d9ee_row17_col5 {\n",
       "  background-color: #b71472;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row6_col13, #T_7d9ee_row9_col14, #T_7d9ee_row13_col6, #T_7d9ee_row14_col9 {\n",
       "  background-color: #c41a7c;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row6_col16, #T_7d9ee_row16_col6 {\n",
       "  background-color: #c2197a;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row7_col10, #T_7d9ee_row10_col7 {\n",
       "  background-color: #8e0152;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row7_col12, #T_7d9ee_row9_col17, #T_7d9ee_row12_col7, #T_7d9ee_row17_col9 {\n",
       "  background-color: #e897c4;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row7_col14, #T_7d9ee_row14_col7 {\n",
       "  background-color: #c51d7e;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row7_col15, #T_7d9ee_row15_col7 {\n",
       "  background-color: #a10a61;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row9_col16, #T_7d9ee_row16_col9 {\n",
       "  background-color: #c62080;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row10_col12, #T_7d9ee_row11_col13, #T_7d9ee_row12_col10, #T_7d9ee_row13_col11 {\n",
       "  background-color: #c82884;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row12_col20, #T_7d9ee_row20_col12 {\n",
       "  background-color: #d65a9f;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row13_col17, #T_7d9ee_row17_col13 {\n",
       "  background-color: #efb0d6;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row14_col15, #T_7d9ee_row15_col14 {\n",
       "  background-color: #f9d1e8;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row14_col20, #T_7d9ee_row20_col14 {\n",
       "  background-color: #f9eff4;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row15_col17, #T_7d9ee_row17_col15 {\n",
       "  background-color: #e286b8;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_7d9ee_row15_col20, #T_7d9ee_row20_col15 {\n",
       "  background-color: #f7f6f7;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_7d9ee_row16_col20, #T_7d9ee_row20_col16 {\n",
       "  background-color: #eba3cd;\n",
       "  color: #000000;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_7d9ee_\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th class=\"col_heading level0 col0\" >Breathing Problem</th>\n",
       "      <th class=\"col_heading level0 col1\" >Fever</th>\n",
       "      <th class=\"col_heading level0 col2\" >Dry Cough</th>\n",
       "      <th class=\"col_heading level0 col3\" >Sore throat</th>\n",
       "      <th class=\"col_heading level0 col4\" >Running Nose</th>\n",
       "      <th class=\"col_heading level0 col5\" >Asthma</th>\n",
       "      <th class=\"col_heading level0 col6\" >Chronic Lung Disease</th>\n",
       "      <th class=\"col_heading level0 col7\" >Headache</th>\n",
       "      <th class=\"col_heading level0 col8\" >Heart Disease</th>\n",
       "      <th class=\"col_heading level0 col9\" >Diabetes</th>\n",
       "      <th class=\"col_heading level0 col10\" >Hyper Tension</th>\n",
       "      <th class=\"col_heading level0 col11\" >Fatigue </th>\n",
       "      <th class=\"col_heading level0 col12\" >Gastrointestinal </th>\n",
       "      <th class=\"col_heading level0 col13\" >Abroad travel</th>\n",
       "      <th class=\"col_heading level0 col14\" >Contact with COVID Patient</th>\n",
       "      <th class=\"col_heading level0 col15\" >Attended Large Gathering</th>\n",
       "      <th class=\"col_heading level0 col16\" >Visited Public Exposed Places</th>\n",
       "      <th class=\"col_heading level0 col17\" >Family working in Public Exposed Places</th>\n",
       "      <th class=\"col_heading level0 col18\" >Wearing Masks</th>\n",
       "      <th class=\"col_heading level0 col19\" >Sanitization from Market</th>\n",
       "      <th class=\"col_heading level0 col20\" >COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row0\" class=\"row_heading level0 row0\" >Breathing Problem</th>\n",
       "      <td id=\"T_7d9ee_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row0_col1\" class=\"data row0 col1\" >0.089903</td>\n",
       "      <td id=\"T_7d9ee_row0_col2\" class=\"data row0 col2\" >0.159562</td>\n",
       "      <td id=\"T_7d9ee_row0_col3\" class=\"data row0 col3\" >0.303768</td>\n",
       "      <td id=\"T_7d9ee_row0_col4\" class=\"data row0 col4\" >0.055190</td>\n",
       "      <td id=\"T_7d9ee_row0_col5\" class=\"data row0 col5\" >0.075318</td>\n",
       "      <td id=\"T_7d9ee_row0_col6\" class=\"data row0 col6\" >-0.098291</td>\n",
       "      <td id=\"T_7d9ee_row0_col7\" class=\"data row0 col7\" >-0.062172</td>\n",
       "      <td id=\"T_7d9ee_row0_col8\" class=\"data row0 col8\" >-0.073366</td>\n",
       "      <td id=\"T_7d9ee_row0_col9\" class=\"data row0 col9\" >0.055427</td>\n",
       "      <td id=\"T_7d9ee_row0_col10\" class=\"data row0 col10\" >0.045256</td>\n",
       "      <td id=\"T_7d9ee_row0_col11\" class=\"data row0 col11\" >0.000561</td>\n",
       "      <td id=\"T_7d9ee_row0_col12\" class=\"data row0 col12\" >-0.075390</td>\n",
       "      <td id=\"T_7d9ee_row0_col13\" class=\"data row0 col13\" >0.117795</td>\n",
       "      <td id=\"T_7d9ee_row0_col14\" class=\"data row0 col14\" >0.214634</td>\n",
       "      <td id=\"T_7d9ee_row0_col15\" class=\"data row0 col15\" >0.200304</td>\n",
       "      <td id=\"T_7d9ee_row0_col16\" class=\"data row0 col16\" >0.066688</td>\n",
       "      <td id=\"T_7d9ee_row0_col17\" class=\"data row0 col17\" >0.018295</td>\n",
       "      <td id=\"T_7d9ee_row0_col18\" class=\"data row0 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row0_col19\" class=\"data row0 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row0_col20\" class=\"data row0 col20\" >0.443764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row1\" class=\"row_heading level0 row1\" >Fever</th>\n",
       "      <td id=\"T_7d9ee_row1_col0\" class=\"data row1 col0\" >0.089903</td>\n",
       "      <td id=\"T_7d9ee_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row1_col2\" class=\"data row1 col2\" >0.127580</td>\n",
       "      <td id=\"T_7d9ee_row1_col3\" class=\"data row1 col3\" >0.322235</td>\n",
       "      <td id=\"T_7d9ee_row1_col4\" class=\"data row1 col4\" >0.081758</td>\n",
       "      <td id=\"T_7d9ee_row1_col5\" class=\"data row1 col5\" >0.073953</td>\n",
       "      <td id=\"T_7d9ee_row1_col6\" class=\"data row1 col6\" >-0.025160</td>\n",
       "      <td id=\"T_7d9ee_row1_col7\" class=\"data row1 col7\" >-0.035416</td>\n",
       "      <td id=\"T_7d9ee_row1_col8\" class=\"data row1 col8\" >-0.031462</td>\n",
       "      <td id=\"T_7d9ee_row1_col9\" class=\"data row1 col9\" >0.050286</td>\n",
       "      <td id=\"T_7d9ee_row1_col10\" class=\"data row1 col10\" >0.079001</td>\n",
       "      <td id=\"T_7d9ee_row1_col11\" class=\"data row1 col11\" >-0.060458</td>\n",
       "      <td id=\"T_7d9ee_row1_col12\" class=\"data row1 col12\" >-0.008067</td>\n",
       "      <td id=\"T_7d9ee_row1_col13\" class=\"data row1 col13\" >0.128726</td>\n",
       "      <td id=\"T_7d9ee_row1_col14\" class=\"data row1 col14\" >0.164704</td>\n",
       "      <td id=\"T_7d9ee_row1_col15\" class=\"data row1 col15\" >0.070490</td>\n",
       "      <td id=\"T_7d9ee_row1_col16\" class=\"data row1 col16\" >0.002252</td>\n",
       "      <td id=\"T_7d9ee_row1_col17\" class=\"data row1 col17\" >0.012102</td>\n",
       "      <td id=\"T_7d9ee_row1_col18\" class=\"data row1 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row1_col19\" class=\"data row1 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row1_col20\" class=\"data row1 col20\" >0.352891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row2\" class=\"row_heading level0 row2\" >Dry Cough</th>\n",
       "      <td id=\"T_7d9ee_row2_col0\" class=\"data row2 col0\" >0.159562</td>\n",
       "      <td id=\"T_7d9ee_row2_col1\" class=\"data row2 col1\" >0.127580</td>\n",
       "      <td id=\"T_7d9ee_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row2_col3\" class=\"data row2 col3\" >0.213907</td>\n",
       "      <td id=\"T_7d9ee_row2_col4\" class=\"data row2 col4\" >-0.030763</td>\n",
       "      <td id=\"T_7d9ee_row2_col5\" class=\"data row2 col5\" >0.086843</td>\n",
       "      <td id=\"T_7d9ee_row2_col6\" class=\"data row2 col6\" >-0.043664</td>\n",
       "      <td id=\"T_7d9ee_row2_col7\" class=\"data row2 col7\" >-0.035912</td>\n",
       "      <td id=\"T_7d9ee_row2_col8\" class=\"data row2 col8\" >0.047566</td>\n",
       "      <td id=\"T_7d9ee_row2_col9\" class=\"data row2 col9\" >-0.006593</td>\n",
       "      <td id=\"T_7d9ee_row2_col10\" class=\"data row2 col10\" >0.081989</td>\n",
       "      <td id=\"T_7d9ee_row2_col11\" class=\"data row2 col11\" >-0.039909</td>\n",
       "      <td id=\"T_7d9ee_row2_col12\" class=\"data row2 col12\" >0.008251</td>\n",
       "      <td id=\"T_7d9ee_row2_col13\" class=\"data row2 col13\" >0.331418</td>\n",
       "      <td id=\"T_7d9ee_row2_col14\" class=\"data row2 col14\" >0.128330</td>\n",
       "      <td id=\"T_7d9ee_row2_col15\" class=\"data row2 col15\" >0.117963</td>\n",
       "      <td id=\"T_7d9ee_row2_col16\" class=\"data row2 col16\" >0.086176</td>\n",
       "      <td id=\"T_7d9ee_row2_col17\" class=\"data row2 col17\" >0.163102</td>\n",
       "      <td id=\"T_7d9ee_row2_col18\" class=\"data row2 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row2_col19\" class=\"data row2 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row2_col20\" class=\"data row2 col20\" >0.464292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row3\" class=\"row_heading level0 row3\" >Sore throat</th>\n",
       "      <td id=\"T_7d9ee_row3_col0\" class=\"data row3 col0\" >0.303768</td>\n",
       "      <td id=\"T_7d9ee_row3_col1\" class=\"data row3 col1\" >0.322235</td>\n",
       "      <td id=\"T_7d9ee_row3_col2\" class=\"data row3 col2\" >0.213907</td>\n",
       "      <td id=\"T_7d9ee_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row3_col4\" class=\"data row3 col4\" >0.039450</td>\n",
       "      <td id=\"T_7d9ee_row3_col5\" class=\"data row3 col5\" >0.081377</td>\n",
       "      <td id=\"T_7d9ee_row3_col6\" class=\"data row3 col6\" >-0.050440</td>\n",
       "      <td id=\"T_7d9ee_row3_col7\" class=\"data row3 col7\" >-0.015971</td>\n",
       "      <td id=\"T_7d9ee_row3_col8\" class=\"data row3 col8\" >0.002177</td>\n",
       "      <td id=\"T_7d9ee_row3_col9\" class=\"data row3 col9\" >0.001938</td>\n",
       "      <td id=\"T_7d9ee_row3_col10\" class=\"data row3 col10\" >0.042811</td>\n",
       "      <td id=\"T_7d9ee_row3_col11\" class=\"data row3 col11\" >-0.023290</td>\n",
       "      <td id=\"T_7d9ee_row3_col12\" class=\"data row3 col12\" >0.025886</td>\n",
       "      <td id=\"T_7d9ee_row3_col13\" class=\"data row3 col13\" >0.205986</td>\n",
       "      <td id=\"T_7d9ee_row3_col14\" class=\"data row3 col14\" >0.189251</td>\n",
       "      <td id=\"T_7d9ee_row3_col15\" class=\"data row3 col15\" >0.216438</td>\n",
       "      <td id=\"T_7d9ee_row3_col16\" class=\"data row3 col16\" >0.079055</td>\n",
       "      <td id=\"T_7d9ee_row3_col17\" class=\"data row3 col17\" >0.104378</td>\n",
       "      <td id=\"T_7d9ee_row3_col18\" class=\"data row3 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row3_col19\" class=\"data row3 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row3_col20\" class=\"data row3 col20\" >0.502848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row4\" class=\"row_heading level0 row4\" >Running Nose</th>\n",
       "      <td id=\"T_7d9ee_row4_col0\" class=\"data row4 col0\" >0.055190</td>\n",
       "      <td id=\"T_7d9ee_row4_col1\" class=\"data row4 col1\" >0.081758</td>\n",
       "      <td id=\"T_7d9ee_row4_col2\" class=\"data row4 col2\" >-0.030763</td>\n",
       "      <td id=\"T_7d9ee_row4_col3\" class=\"data row4 col3\" >0.039450</td>\n",
       "      <td id=\"T_7d9ee_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row4_col5\" class=\"data row4 col5\" >-0.022763</td>\n",
       "      <td id=\"T_7d9ee_row4_col6\" class=\"data row4 col6\" >-0.014376</td>\n",
       "      <td id=\"T_7d9ee_row4_col7\" class=\"data row4 col7\" >0.068479</td>\n",
       "      <td id=\"T_7d9ee_row4_col8\" class=\"data row4 col8\" >-0.056750</td>\n",
       "      <td id=\"T_7d9ee_row4_col9\" class=\"data row4 col9\" >0.042961</td>\n",
       "      <td id=\"T_7d9ee_row4_col10\" class=\"data row4 col10\" >-0.020445</td>\n",
       "      <td id=\"T_7d9ee_row4_col11\" class=\"data row4 col11\" >0.007026</td>\n",
       "      <td id=\"T_7d9ee_row4_col12\" class=\"data row4 col12\" >-0.014673</td>\n",
       "      <td id=\"T_7d9ee_row4_col13\" class=\"data row4 col13\" >0.034526</td>\n",
       "      <td id=\"T_7d9ee_row4_col14\" class=\"data row4 col14\" >0.003776</td>\n",
       "      <td id=\"T_7d9ee_row4_col15\" class=\"data row4 col15\" >0.061099</td>\n",
       "      <td id=\"T_7d9ee_row4_col16\" class=\"data row4 col16\" >0.032568</td>\n",
       "      <td id=\"T_7d9ee_row4_col17\" class=\"data row4 col17\" >-0.061323</td>\n",
       "      <td id=\"T_7d9ee_row4_col18\" class=\"data row4 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row4_col19\" class=\"data row4 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row4_col20\" class=\"data row4 col20\" >-0.005657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row5\" class=\"row_heading level0 row5\" >Asthma</th>\n",
       "      <td id=\"T_7d9ee_row5_col0\" class=\"data row5 col0\" >0.075318</td>\n",
       "      <td id=\"T_7d9ee_row5_col1\" class=\"data row5 col1\" >0.073953</td>\n",
       "      <td id=\"T_7d9ee_row5_col2\" class=\"data row5 col2\" >0.086843</td>\n",
       "      <td id=\"T_7d9ee_row5_col3\" class=\"data row5 col3\" >0.081377</td>\n",
       "      <td id=\"T_7d9ee_row5_col4\" class=\"data row5 col4\" >-0.022763</td>\n",
       "      <td id=\"T_7d9ee_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row5_col6\" class=\"data row5 col6\" >-0.033771</td>\n",
       "      <td id=\"T_7d9ee_row5_col7\" class=\"data row5 col7\" >0.037064</td>\n",
       "      <td id=\"T_7d9ee_row5_col8\" class=\"data row5 col8\" >0.076783</td>\n",
       "      <td id=\"T_7d9ee_row5_col9\" class=\"data row5 col9\" >-0.012060</td>\n",
       "      <td id=\"T_7d9ee_row5_col10\" class=\"data row5 col10\" >0.017707</td>\n",
       "      <td id=\"T_7d9ee_row5_col11\" class=\"data row5 col11\" >0.006564</td>\n",
       "      <td id=\"T_7d9ee_row5_col12\" class=\"data row5 col12\" >0.101909</td>\n",
       "      <td id=\"T_7d9ee_row5_col13\" class=\"data row5 col13\" >0.068286</td>\n",
       "      <td id=\"T_7d9ee_row5_col14\" class=\"data row5 col14\" >0.005046</td>\n",
       "      <td id=\"T_7d9ee_row5_col15\" class=\"data row5 col15\" >-0.044592</td>\n",
       "      <td id=\"T_7d9ee_row5_col16\" class=\"data row5 col16\" >0.020941</td>\n",
       "      <td id=\"T_7d9ee_row5_col17\" class=\"data row5 col17\" >-0.115679</td>\n",
       "      <td id=\"T_7d9ee_row5_col18\" class=\"data row5 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row5_col19\" class=\"data row5 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row5_col20\" class=\"data row5 col20\" >0.089930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row6\" class=\"row_heading level0 row6\" >Chronic Lung Disease</th>\n",
       "      <td id=\"T_7d9ee_row6_col0\" class=\"data row6 col0\" >-0.098291</td>\n",
       "      <td id=\"T_7d9ee_row6_col1\" class=\"data row6 col1\" >-0.025160</td>\n",
       "      <td id=\"T_7d9ee_row6_col2\" class=\"data row6 col2\" >-0.043664</td>\n",
       "      <td id=\"T_7d9ee_row6_col3\" class=\"data row6 col3\" >-0.050440</td>\n",
       "      <td id=\"T_7d9ee_row6_col4\" class=\"data row6 col4\" >-0.014376</td>\n",
       "      <td id=\"T_7d9ee_row6_col5\" class=\"data row6 col5\" >-0.033771</td>\n",
       "      <td id=\"T_7d9ee_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row6_col7\" class=\"data row6 col7\" >-0.050480</td>\n",
       "      <td id=\"T_7d9ee_row6_col8\" class=\"data row6 col8\" >-0.039860</td>\n",
       "      <td id=\"T_7d9ee_row6_col9\" class=\"data row6 col9\" >0.046789</td>\n",
       "      <td id=\"T_7d9ee_row6_col10\" class=\"data row6 col10\" >-0.010331</td>\n",
       "      <td id=\"T_7d9ee_row6_col11\" class=\"data row6 col11\" >-0.047655</td>\n",
       "      <td id=\"T_7d9ee_row6_col12\" class=\"data row6 col12\" >-0.050333</td>\n",
       "      <td id=\"T_7d9ee_row6_col13\" class=\"data row6 col13\" >-0.088854</td>\n",
       "      <td id=\"T_7d9ee_row6_col14\" class=\"data row6 col14\" >-0.062482</td>\n",
       "      <td id=\"T_7d9ee_row6_col15\" class=\"data row6 col15\" >-0.020548</td>\n",
       "      <td id=\"T_7d9ee_row6_col16\" class=\"data row6 col16\" >-0.093049</td>\n",
       "      <td id=\"T_7d9ee_row6_col17\" class=\"data row6 col17\" >0.038343</td>\n",
       "      <td id=\"T_7d9ee_row6_col18\" class=\"data row6 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row6_col19\" class=\"data row6 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row6_col20\" class=\"data row6 col20\" >-0.056837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row7\" class=\"row_heading level0 row7\" >Headache</th>\n",
       "      <td id=\"T_7d9ee_row7_col0\" class=\"data row7 col0\" >-0.062172</td>\n",
       "      <td id=\"T_7d9ee_row7_col1\" class=\"data row7 col1\" >-0.035416</td>\n",
       "      <td id=\"T_7d9ee_row7_col2\" class=\"data row7 col2\" >-0.035912</td>\n",
       "      <td id=\"T_7d9ee_row7_col3\" class=\"data row7 col3\" >-0.015971</td>\n",
       "      <td id=\"T_7d9ee_row7_col4\" class=\"data row7 col4\" >0.068479</td>\n",
       "      <td id=\"T_7d9ee_row7_col5\" class=\"data row7 col5\" >0.037064</td>\n",
       "      <td id=\"T_7d9ee_row7_col6\" class=\"data row7 col6\" >-0.050480</td>\n",
       "      <td id=\"T_7d9ee_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row7_col8\" class=\"data row7 col8\" >0.048471</td>\n",
       "      <td id=\"T_7d9ee_row7_col9\" class=\"data row7 col9\" >0.032390</td>\n",
       "      <td id=\"T_7d9ee_row7_col10\" class=\"data row7 col10\" >-0.207489</td>\n",
       "      <td id=\"T_7d9ee_row7_col11\" class=\"data row7 col11\" >0.052035</td>\n",
       "      <td id=\"T_7d9ee_row7_col12\" class=\"data row7 col12\" >0.097778</td>\n",
       "      <td id=\"T_7d9ee_row7_col13\" class=\"data row7 col13\" >0.043589</td>\n",
       "      <td id=\"T_7d9ee_row7_col14\" class=\"data row7 col14\" >-0.082101</td>\n",
       "      <td id=\"T_7d9ee_row7_col15\" class=\"data row7 col15\" >-0.162992</td>\n",
       "      <td id=\"T_7d9ee_row7_col16\" class=\"data row7 col16\" >-0.005790</td>\n",
       "      <td id=\"T_7d9ee_row7_col17\" class=\"data row7 col17\" >-0.012625</td>\n",
       "      <td id=\"T_7d9ee_row7_col18\" class=\"data row7 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row7_col19\" class=\"data row7 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row7_col20\" class=\"data row7 col20\" >-0.027793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row8\" class=\"row_heading level0 row8\" >Heart Disease</th>\n",
       "      <td id=\"T_7d9ee_row8_col0\" class=\"data row8 col0\" >-0.073366</td>\n",
       "      <td id=\"T_7d9ee_row8_col1\" class=\"data row8 col1\" >-0.031462</td>\n",
       "      <td id=\"T_7d9ee_row8_col2\" class=\"data row8 col2\" >0.047566</td>\n",
       "      <td id=\"T_7d9ee_row8_col3\" class=\"data row8 col3\" >0.002177</td>\n",
       "      <td id=\"T_7d9ee_row8_col4\" class=\"data row8 col4\" >-0.056750</td>\n",
       "      <td id=\"T_7d9ee_row8_col5\" class=\"data row8 col5\" >0.076783</td>\n",
       "      <td id=\"T_7d9ee_row8_col6\" class=\"data row8 col6\" >-0.039860</td>\n",
       "      <td id=\"T_7d9ee_row8_col7\" class=\"data row8 col7\" >0.048471</td>\n",
       "      <td id=\"T_7d9ee_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row8_col9\" class=\"data row8 col9\" >-0.032956</td>\n",
       "      <td id=\"T_7d9ee_row8_col10\" class=\"data row8 col10\" >0.049139</td>\n",
       "      <td id=\"T_7d9ee_row8_col11\" class=\"data row8 col11\" >-0.058925</td>\n",
       "      <td id=\"T_7d9ee_row8_col12\" class=\"data row8 col12\" >0.004121</td>\n",
       "      <td id=\"T_7d9ee_row8_col13\" class=\"data row8 col13\" >-0.020761</td>\n",
       "      <td id=\"T_7d9ee_row8_col14\" class=\"data row8 col14\" >-0.025593</td>\n",
       "      <td id=\"T_7d9ee_row8_col15\" class=\"data row8 col15\" >-0.045437</td>\n",
       "      <td id=\"T_7d9ee_row8_col16\" class=\"data row8 col16\" >0.086169</td>\n",
       "      <td id=\"T_7d9ee_row8_col17\" class=\"data row8 col17\" >0.035000</td>\n",
       "      <td id=\"T_7d9ee_row8_col18\" class=\"data row8 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row8_col19\" class=\"data row8 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row8_col20\" class=\"data row8 col20\" >0.027072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row9\" class=\"row_heading level0 row9\" >Diabetes</th>\n",
       "      <td id=\"T_7d9ee_row9_col0\" class=\"data row9 col0\" >0.055427</td>\n",
       "      <td id=\"T_7d9ee_row9_col1\" class=\"data row9 col1\" >0.050286</td>\n",
       "      <td id=\"T_7d9ee_row9_col2\" class=\"data row9 col2\" >-0.006593</td>\n",
       "      <td id=\"T_7d9ee_row9_col3\" class=\"data row9 col3\" >0.001938</td>\n",
       "      <td id=\"T_7d9ee_row9_col4\" class=\"data row9 col4\" >0.042961</td>\n",
       "      <td id=\"T_7d9ee_row9_col5\" class=\"data row9 col5\" >-0.012060</td>\n",
       "      <td id=\"T_7d9ee_row9_col6\" class=\"data row9 col6\" >0.046789</td>\n",
       "      <td id=\"T_7d9ee_row9_col7\" class=\"data row9 col7\" >0.032390</td>\n",
       "      <td id=\"T_7d9ee_row9_col8\" class=\"data row9 col8\" >-0.032956</td>\n",
       "      <td id=\"T_7d9ee_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row9_col10\" class=\"data row9 col10\" >0.042543</td>\n",
       "      <td id=\"T_7d9ee_row9_col11\" class=\"data row9 col11\" >-0.043903</td>\n",
       "      <td id=\"T_7d9ee_row9_col12\" class=\"data row9 col12\" >0.040651</td>\n",
       "      <td id=\"T_7d9ee_row9_col13\" class=\"data row9 col13\" >0.039013</td>\n",
       "      <td id=\"T_7d9ee_row9_col14\" class=\"data row9 col14\" >-0.085696</td>\n",
       "      <td id=\"T_7d9ee_row9_col15\" class=\"data row9 col15\" >-0.061650</td>\n",
       "      <td id=\"T_7d9ee_row9_col16\" class=\"data row9 col16\" >-0.078212</td>\n",
       "      <td id=\"T_7d9ee_row9_col17\" class=\"data row9 col17\" >0.097696</td>\n",
       "      <td id=\"T_7d9ee_row9_col18\" class=\"data row9 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row9_col19\" class=\"data row9 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row9_col20\" class=\"data row9 col20\" >0.040627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row10\" class=\"row_heading level0 row10\" >Hyper Tension</th>\n",
       "      <td id=\"T_7d9ee_row10_col0\" class=\"data row10 col0\" >0.045256</td>\n",
       "      <td id=\"T_7d9ee_row10_col1\" class=\"data row10 col1\" >0.079001</td>\n",
       "      <td id=\"T_7d9ee_row10_col2\" class=\"data row10 col2\" >0.081989</td>\n",
       "      <td id=\"T_7d9ee_row10_col3\" class=\"data row10 col3\" >0.042811</td>\n",
       "      <td id=\"T_7d9ee_row10_col4\" class=\"data row10 col4\" >-0.020445</td>\n",
       "      <td id=\"T_7d9ee_row10_col5\" class=\"data row10 col5\" >0.017707</td>\n",
       "      <td id=\"T_7d9ee_row10_col6\" class=\"data row10 col6\" >-0.010331</td>\n",
       "      <td id=\"T_7d9ee_row10_col7\" class=\"data row10 col7\" >-0.207489</td>\n",
       "      <td id=\"T_7d9ee_row10_col8\" class=\"data row10 col8\" >0.049139</td>\n",
       "      <td id=\"T_7d9ee_row10_col9\" class=\"data row10 col9\" >0.042543</td>\n",
       "      <td id=\"T_7d9ee_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row10_col11\" class=\"data row10 col11\" >-0.027605</td>\n",
       "      <td id=\"T_7d9ee_row10_col12\" class=\"data row10 col12\" >-0.067972</td>\n",
       "      <td id=\"T_7d9ee_row10_col13\" class=\"data row10 col13\" >-0.016382</td>\n",
       "      <td id=\"T_7d9ee_row10_col14\" class=\"data row10 col14\" >0.027307</td>\n",
       "      <td id=\"T_7d9ee_row10_col15\" class=\"data row10 col15\" >0.002911</td>\n",
       "      <td id=\"T_7d9ee_row10_col16\" class=\"data row10 col16\" >0.019174</td>\n",
       "      <td id=\"T_7d9ee_row10_col17\" class=\"data row10 col17\" >0.048152</td>\n",
       "      <td id=\"T_7d9ee_row10_col18\" class=\"data row10 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row10_col19\" class=\"data row10 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row10_col20\" class=\"data row10 col20\" >0.102575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row11\" class=\"row_heading level0 row11\" >Fatigue </th>\n",
       "      <td id=\"T_7d9ee_row11_col0\" class=\"data row11 col0\" >0.000561</td>\n",
       "      <td id=\"T_7d9ee_row11_col1\" class=\"data row11 col1\" >-0.060458</td>\n",
       "      <td id=\"T_7d9ee_row11_col2\" class=\"data row11 col2\" >-0.039909</td>\n",
       "      <td id=\"T_7d9ee_row11_col3\" class=\"data row11 col3\" >-0.023290</td>\n",
       "      <td id=\"T_7d9ee_row11_col4\" class=\"data row11 col4\" >0.007026</td>\n",
       "      <td id=\"T_7d9ee_row11_col5\" class=\"data row11 col5\" >0.006564</td>\n",
       "      <td id=\"T_7d9ee_row11_col6\" class=\"data row11 col6\" >-0.047655</td>\n",
       "      <td id=\"T_7d9ee_row11_col7\" class=\"data row11 col7\" >0.052035</td>\n",
       "      <td id=\"T_7d9ee_row11_col8\" class=\"data row11 col8\" >-0.058925</td>\n",
       "      <td id=\"T_7d9ee_row11_col9\" class=\"data row11 col9\" >-0.043903</td>\n",
       "      <td id=\"T_7d9ee_row11_col10\" class=\"data row11 col10\" >-0.027605</td>\n",
       "      <td id=\"T_7d9ee_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row11_col12\" class=\"data row11 col12\" >0.009356</td>\n",
       "      <td id=\"T_7d9ee_row11_col13\" class=\"data row11 col13\" >-0.068401</td>\n",
       "      <td id=\"T_7d9ee_row11_col14\" class=\"data row11 col14\" >-0.027383</td>\n",
       "      <td id=\"T_7d9ee_row11_col15\" class=\"data row11 col15\" >-0.031058</td>\n",
       "      <td id=\"T_7d9ee_row11_col16\" class=\"data row11 col16\" >-0.009562</td>\n",
       "      <td id=\"T_7d9ee_row11_col17\" class=\"data row11 col17\" >-0.025623</td>\n",
       "      <td id=\"T_7d9ee_row11_col18\" class=\"data row11 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row11_col19\" class=\"data row11 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row11_col20\" class=\"data row11 col20\" >-0.044188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row12\" class=\"row_heading level0 row12\" >Gastrointestinal </th>\n",
       "      <td id=\"T_7d9ee_row12_col0\" class=\"data row12 col0\" >-0.075390</td>\n",
       "      <td id=\"T_7d9ee_row12_col1\" class=\"data row12 col1\" >-0.008067</td>\n",
       "      <td id=\"T_7d9ee_row12_col2\" class=\"data row12 col2\" >0.008251</td>\n",
       "      <td id=\"T_7d9ee_row12_col3\" class=\"data row12 col3\" >0.025886</td>\n",
       "      <td id=\"T_7d9ee_row12_col4\" class=\"data row12 col4\" >-0.014673</td>\n",
       "      <td id=\"T_7d9ee_row12_col5\" class=\"data row12 col5\" >0.101909</td>\n",
       "      <td id=\"T_7d9ee_row12_col6\" class=\"data row12 col6\" >-0.050333</td>\n",
       "      <td id=\"T_7d9ee_row12_col7\" class=\"data row12 col7\" >0.097778</td>\n",
       "      <td id=\"T_7d9ee_row12_col8\" class=\"data row12 col8\" >0.004121</td>\n",
       "      <td id=\"T_7d9ee_row12_col9\" class=\"data row12 col9\" >0.040651</td>\n",
       "      <td id=\"T_7d9ee_row12_col10\" class=\"data row12 col10\" >-0.067972</td>\n",
       "      <td id=\"T_7d9ee_row12_col11\" class=\"data row12 col11\" >0.009356</td>\n",
       "      <td id=\"T_7d9ee_row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row12_col13\" class=\"data row12 col13\" >0.099577</td>\n",
       "      <td id=\"T_7d9ee_row12_col14\" class=\"data row12 col14\" >0.025277</td>\n",
       "      <td id=\"T_7d9ee_row12_col15\" class=\"data row12 col15\" >-0.017251</td>\n",
       "      <td id=\"T_7d9ee_row12_col16\" class=\"data row12 col16\" >-0.061885</td>\n",
       "      <td id=\"T_7d9ee_row12_col17\" class=\"data row12 col17\" >-0.027603</td>\n",
       "      <td id=\"T_7d9ee_row12_col18\" class=\"data row12 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row12_col19\" class=\"data row12 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row12_col20\" class=\"data row12 col20\" >-0.003367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row13\" class=\"row_heading level0 row13\" >Abroad travel</th>\n",
       "      <td id=\"T_7d9ee_row13_col0\" class=\"data row13 col0\" >0.117795</td>\n",
       "      <td id=\"T_7d9ee_row13_col1\" class=\"data row13 col1\" >0.128726</td>\n",
       "      <td id=\"T_7d9ee_row13_col2\" class=\"data row13 col2\" >0.331418</td>\n",
       "      <td id=\"T_7d9ee_row13_col3\" class=\"data row13 col3\" >0.205986</td>\n",
       "      <td id=\"T_7d9ee_row13_col4\" class=\"data row13 col4\" >0.034526</td>\n",
       "      <td id=\"T_7d9ee_row13_col5\" class=\"data row13 col5\" >0.068286</td>\n",
       "      <td id=\"T_7d9ee_row13_col6\" class=\"data row13 col6\" >-0.088854</td>\n",
       "      <td id=\"T_7d9ee_row13_col7\" class=\"data row13 col7\" >0.043589</td>\n",
       "      <td id=\"T_7d9ee_row13_col8\" class=\"data row13 col8\" >-0.020761</td>\n",
       "      <td id=\"T_7d9ee_row13_col9\" class=\"data row13 col9\" >0.039013</td>\n",
       "      <td id=\"T_7d9ee_row13_col10\" class=\"data row13 col10\" >-0.016382</td>\n",
       "      <td id=\"T_7d9ee_row13_col11\" class=\"data row13 col11\" >-0.068401</td>\n",
       "      <td id=\"T_7d9ee_row13_col12\" class=\"data row13 col12\" >0.099577</td>\n",
       "      <td id=\"T_7d9ee_row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row13_col14\" class=\"data row13 col14\" >0.080210</td>\n",
       "      <td id=\"T_7d9ee_row13_col15\" class=\"data row13 col15\" >0.113399</td>\n",
       "      <td id=\"T_7d9ee_row13_col16\" class=\"data row13 col16\" >0.069609</td>\n",
       "      <td id=\"T_7d9ee_row13_col17\" class=\"data row13 col17\" >0.143094</td>\n",
       "      <td id=\"T_7d9ee_row13_col18\" class=\"data row13 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row13_col19\" class=\"data row13 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row13_col20\" class=\"data row13 col20\" >0.443875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row14\" class=\"row_heading level0 row14\" >Contact with COVID Patient</th>\n",
       "      <td id=\"T_7d9ee_row14_col0\" class=\"data row14 col0\" >0.214634</td>\n",
       "      <td id=\"T_7d9ee_row14_col1\" class=\"data row14 col1\" >0.164704</td>\n",
       "      <td id=\"T_7d9ee_row14_col2\" class=\"data row14 col2\" >0.128330</td>\n",
       "      <td id=\"T_7d9ee_row14_col3\" class=\"data row14 col3\" >0.189251</td>\n",
       "      <td id=\"T_7d9ee_row14_col4\" class=\"data row14 col4\" >0.003776</td>\n",
       "      <td id=\"T_7d9ee_row14_col5\" class=\"data row14 col5\" >0.005046</td>\n",
       "      <td id=\"T_7d9ee_row14_col6\" class=\"data row14 col6\" >-0.062482</td>\n",
       "      <td id=\"T_7d9ee_row14_col7\" class=\"data row14 col7\" >-0.082101</td>\n",
       "      <td id=\"T_7d9ee_row14_col8\" class=\"data row14 col8\" >-0.025593</td>\n",
       "      <td id=\"T_7d9ee_row14_col9\" class=\"data row14 col9\" >-0.085696</td>\n",
       "      <td id=\"T_7d9ee_row14_col10\" class=\"data row14 col10\" >0.027307</td>\n",
       "      <td id=\"T_7d9ee_row14_col11\" class=\"data row14 col11\" >-0.027383</td>\n",
       "      <td id=\"T_7d9ee_row14_col12\" class=\"data row14 col12\" >0.025277</td>\n",
       "      <td id=\"T_7d9ee_row14_col13\" class=\"data row14 col13\" >0.080210</td>\n",
       "      <td id=\"T_7d9ee_row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row14_col15\" class=\"data row14 col15\" >0.234649</td>\n",
       "      <td id=\"T_7d9ee_row14_col16\" class=\"data row14 col16\" >0.079800</td>\n",
       "      <td id=\"T_7d9ee_row14_col17\" class=\"data row14 col17\" >0.006909</td>\n",
       "      <td id=\"T_7d9ee_row14_col18\" class=\"data row14 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row14_col19\" class=\"data row14 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row14_col20\" class=\"data row14 col20\" >0.357122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row15\" class=\"row_heading level0 row15\" >Attended Large Gathering</th>\n",
       "      <td id=\"T_7d9ee_row15_col0\" class=\"data row15 col0\" >0.200304</td>\n",
       "      <td id=\"T_7d9ee_row15_col1\" class=\"data row15 col1\" >0.070490</td>\n",
       "      <td id=\"T_7d9ee_row15_col2\" class=\"data row15 col2\" >0.117963</td>\n",
       "      <td id=\"T_7d9ee_row15_col3\" class=\"data row15 col3\" >0.216438</td>\n",
       "      <td id=\"T_7d9ee_row15_col4\" class=\"data row15 col4\" >0.061099</td>\n",
       "      <td id=\"T_7d9ee_row15_col5\" class=\"data row15 col5\" >-0.044592</td>\n",
       "      <td id=\"T_7d9ee_row15_col6\" class=\"data row15 col6\" >-0.020548</td>\n",
       "      <td id=\"T_7d9ee_row15_col7\" class=\"data row15 col7\" >-0.162992</td>\n",
       "      <td id=\"T_7d9ee_row15_col8\" class=\"data row15 col8\" >-0.045437</td>\n",
       "      <td id=\"T_7d9ee_row15_col9\" class=\"data row15 col9\" >-0.061650</td>\n",
       "      <td id=\"T_7d9ee_row15_col10\" class=\"data row15 col10\" >0.002911</td>\n",
       "      <td id=\"T_7d9ee_row15_col11\" class=\"data row15 col11\" >-0.031058</td>\n",
       "      <td id=\"T_7d9ee_row15_col12\" class=\"data row15 col12\" >-0.017251</td>\n",
       "      <td id=\"T_7d9ee_row15_col13\" class=\"data row15 col13\" >0.113399</td>\n",
       "      <td id=\"T_7d9ee_row15_col14\" class=\"data row15 col14\" >0.234649</td>\n",
       "      <td id=\"T_7d9ee_row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row15_col16\" class=\"data row15 col16\" >0.083795</td>\n",
       "      <td id=\"T_7d9ee_row15_col17\" class=\"data row15 col17\" >0.063776</td>\n",
       "      <td id=\"T_7d9ee_row15_col18\" class=\"data row15 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row15_col19\" class=\"data row15 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row15_col20\" class=\"data row15 col20\" >0.390145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row16\" class=\"row_heading level0 row16\" >Visited Public Exposed Places</th>\n",
       "      <td id=\"T_7d9ee_row16_col0\" class=\"data row16 col0\" >0.066688</td>\n",
       "      <td id=\"T_7d9ee_row16_col1\" class=\"data row16 col1\" >0.002252</td>\n",
       "      <td id=\"T_7d9ee_row16_col2\" class=\"data row16 col2\" >0.086176</td>\n",
       "      <td id=\"T_7d9ee_row16_col3\" class=\"data row16 col3\" >0.079055</td>\n",
       "      <td id=\"T_7d9ee_row16_col4\" class=\"data row16 col4\" >0.032568</td>\n",
       "      <td id=\"T_7d9ee_row16_col5\" class=\"data row16 col5\" >0.020941</td>\n",
       "      <td id=\"T_7d9ee_row16_col6\" class=\"data row16 col6\" >-0.093049</td>\n",
       "      <td id=\"T_7d9ee_row16_col7\" class=\"data row16 col7\" >-0.005790</td>\n",
       "      <td id=\"T_7d9ee_row16_col8\" class=\"data row16 col8\" >0.086169</td>\n",
       "      <td id=\"T_7d9ee_row16_col9\" class=\"data row16 col9\" >-0.078212</td>\n",
       "      <td id=\"T_7d9ee_row16_col10\" class=\"data row16 col10\" >0.019174</td>\n",
       "      <td id=\"T_7d9ee_row16_col11\" class=\"data row16 col11\" >-0.009562</td>\n",
       "      <td id=\"T_7d9ee_row16_col12\" class=\"data row16 col12\" >-0.061885</td>\n",
       "      <td id=\"T_7d9ee_row16_col13\" class=\"data row16 col13\" >0.069609</td>\n",
       "      <td id=\"T_7d9ee_row16_col14\" class=\"data row16 col14\" >0.079800</td>\n",
       "      <td id=\"T_7d9ee_row16_col15\" class=\"data row16 col15\" >0.083795</td>\n",
       "      <td id=\"T_7d9ee_row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row16_col17\" class=\"data row16 col17\" >0.028486</td>\n",
       "      <td id=\"T_7d9ee_row16_col18\" class=\"data row16 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row16_col19\" class=\"data row16 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row16_col20\" class=\"data row16 col20\" >0.119755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row17\" class=\"row_heading level0 row17\" >Family working in Public Exposed Places</th>\n",
       "      <td id=\"T_7d9ee_row17_col0\" class=\"data row17 col0\" >0.018295</td>\n",
       "      <td id=\"T_7d9ee_row17_col1\" class=\"data row17 col1\" >0.012102</td>\n",
       "      <td id=\"T_7d9ee_row17_col2\" class=\"data row17 col2\" >0.163102</td>\n",
       "      <td id=\"T_7d9ee_row17_col3\" class=\"data row17 col3\" >0.104378</td>\n",
       "      <td id=\"T_7d9ee_row17_col4\" class=\"data row17 col4\" >-0.061323</td>\n",
       "      <td id=\"T_7d9ee_row17_col5\" class=\"data row17 col5\" >-0.115679</td>\n",
       "      <td id=\"T_7d9ee_row17_col6\" class=\"data row17 col6\" >0.038343</td>\n",
       "      <td id=\"T_7d9ee_row17_col7\" class=\"data row17 col7\" >-0.012625</td>\n",
       "      <td id=\"T_7d9ee_row17_col8\" class=\"data row17 col8\" >0.035000</td>\n",
       "      <td id=\"T_7d9ee_row17_col9\" class=\"data row17 col9\" >0.097696</td>\n",
       "      <td id=\"T_7d9ee_row17_col10\" class=\"data row17 col10\" >0.048152</td>\n",
       "      <td id=\"T_7d9ee_row17_col11\" class=\"data row17 col11\" >-0.025623</td>\n",
       "      <td id=\"T_7d9ee_row17_col12\" class=\"data row17 col12\" >-0.027603</td>\n",
       "      <td id=\"T_7d9ee_row17_col13\" class=\"data row17 col13\" >0.143094</td>\n",
       "      <td id=\"T_7d9ee_row17_col14\" class=\"data row17 col14\" >0.006909</td>\n",
       "      <td id=\"T_7d9ee_row17_col15\" class=\"data row17 col15\" >0.063776</td>\n",
       "      <td id=\"T_7d9ee_row17_col16\" class=\"data row17 col16\" >0.028486</td>\n",
       "      <td id=\"T_7d9ee_row17_col17\" class=\"data row17 col17\" >1.000000</td>\n",
       "      <td id=\"T_7d9ee_row17_col18\" class=\"data row17 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row17_col19\" class=\"data row17 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row17_col20\" class=\"data row17 col20\" >0.160208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row18\" class=\"row_heading level0 row18\" >Wearing Masks</th>\n",
       "      <td id=\"T_7d9ee_row18_col0\" class=\"data row18 col0\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col1\" class=\"data row18 col1\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col2\" class=\"data row18 col2\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col3\" class=\"data row18 col3\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col4\" class=\"data row18 col4\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col5\" class=\"data row18 col5\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col6\" class=\"data row18 col6\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col7\" class=\"data row18 col7\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col8\" class=\"data row18 col8\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col9\" class=\"data row18 col9\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col10\" class=\"data row18 col10\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col11\" class=\"data row18 col11\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col12\" class=\"data row18 col12\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col13\" class=\"data row18 col13\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col14\" class=\"data row18 col14\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col15\" class=\"data row18 col15\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col16\" class=\"data row18 col16\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col17\" class=\"data row18 col17\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col18\" class=\"data row18 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col19\" class=\"data row18 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row18_col20\" class=\"data row18 col20\" >nan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row19\" class=\"row_heading level0 row19\" >Sanitization from Market</th>\n",
       "      <td id=\"T_7d9ee_row19_col0\" class=\"data row19 col0\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col1\" class=\"data row19 col1\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col2\" class=\"data row19 col2\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col3\" class=\"data row19 col3\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col4\" class=\"data row19 col4\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col5\" class=\"data row19 col5\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col6\" class=\"data row19 col6\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col7\" class=\"data row19 col7\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col8\" class=\"data row19 col8\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col9\" class=\"data row19 col9\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col10\" class=\"data row19 col10\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col11\" class=\"data row19 col11\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col12\" class=\"data row19 col12\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col13\" class=\"data row19 col13\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col14\" class=\"data row19 col14\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col15\" class=\"data row19 col15\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col16\" class=\"data row19 col16\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col17\" class=\"data row19 col17\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col18\" class=\"data row19 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col19\" class=\"data row19 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row19_col20\" class=\"data row19 col20\" >nan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_7d9ee_level0_row20\" class=\"row_heading level0 row20\" >COVID-19</th>\n",
       "      <td id=\"T_7d9ee_row20_col0\" class=\"data row20 col0\" >0.443764</td>\n",
       "      <td id=\"T_7d9ee_row20_col1\" class=\"data row20 col1\" >0.352891</td>\n",
       "      <td id=\"T_7d9ee_row20_col2\" class=\"data row20 col2\" >0.464292</td>\n",
       "      <td id=\"T_7d9ee_row20_col3\" class=\"data row20 col3\" >0.502848</td>\n",
       "      <td id=\"T_7d9ee_row20_col4\" class=\"data row20 col4\" >-0.005657</td>\n",
       "      <td id=\"T_7d9ee_row20_col5\" class=\"data row20 col5\" >0.089930</td>\n",
       "      <td id=\"T_7d9ee_row20_col6\" class=\"data row20 col6\" >-0.056837</td>\n",
       "      <td id=\"T_7d9ee_row20_col7\" class=\"data row20 col7\" >-0.027793</td>\n",
       "      <td id=\"T_7d9ee_row20_col8\" class=\"data row20 col8\" >0.027072</td>\n",
       "      <td id=\"T_7d9ee_row20_col9\" class=\"data row20 col9\" >0.040627</td>\n",
       "      <td id=\"T_7d9ee_row20_col10\" class=\"data row20 col10\" >0.102575</td>\n",
       "      <td id=\"T_7d9ee_row20_col11\" class=\"data row20 col11\" >-0.044188</td>\n",
       "      <td id=\"T_7d9ee_row20_col12\" class=\"data row20 col12\" >-0.003367</td>\n",
       "      <td id=\"T_7d9ee_row20_col13\" class=\"data row20 col13\" >0.443875</td>\n",
       "      <td id=\"T_7d9ee_row20_col14\" class=\"data row20 col14\" >0.357122</td>\n",
       "      <td id=\"T_7d9ee_row20_col15\" class=\"data row20 col15\" >0.390145</td>\n",
       "      <td id=\"T_7d9ee_row20_col16\" class=\"data row20 col16\" >0.119755</td>\n",
       "      <td id=\"T_7d9ee_row20_col17\" class=\"data row20 col17\" >0.160208</td>\n",
       "      <td id=\"T_7d9ee_row20_col18\" class=\"data row20 col18\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row20_col19\" class=\"data row20 col19\" >nan</td>\n",
       "      <td id=\"T_7d9ee_row20_col20\" class=\"data row20 col20\" >1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x14cebbe51f0>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation=covid.corr()\n",
    "correlation.style.background_gradient(cmap='PiYG',axis=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Choosing those featuers which are somehow correlated to COVID-19 positive (i.e.,correlation > 0.1)**\n",
    "\n",
    "So deleting some feature like: Running Nose, Asthma, Chronic Lung Disease, Headache, Heart Disease, Diabetes, Fatigue, Gastrointestinal, Wearing Masks, Sanitization from Market."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.50355Z",
     "iopub.status.busy": "2021-12-30T06:16:16.502661Z",
     "iopub.status.idle": "2021-12-30T06:16:16.52154Z",
     "shell.execute_reply": "2021-12-30T06:16:16.520425Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.503497Z"
    }
   },
   "outputs": [],
   "source": [
    "#Removing unnecessary features\n",
    "covid=covid.drop('Running Nose',axis=1)\n",
    "covid=covid.drop('Asthma',axis=1)\n",
    "covid=covid.drop('Chronic Lung Disease',axis=1)\n",
    "covid=covid.drop('Headache',axis=1)\n",
    "covid=covid.drop('Heart Disease',axis=1)\n",
    "covid=covid.drop('Diabetes',axis=1)\n",
    "covid=covid.drop('Fatigue ',axis=1)\n",
    "covid=covid.drop('Gastrointestinal ',axis=1)\n",
    "covid=covid.drop('Wearing Masks',axis=1)\n",
    "covid=covid.drop('Sanitization from Market',axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.523613Z",
     "iopub.status.busy": "2021-12-30T06:16:16.523081Z",
     "iopub.status.idle": "2021-12-30T06:16:16.540795Z",
     "shell.execute_reply": "2021-12-30T06:16:16.539657Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.523567Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Breathing Problem</th>\n",
       "      <th>Fever</th>\n",
       "      <th>Dry Cough</th>\n",
       "      <th>Sore throat</th>\n",
       "      <th>Hyper Tension</th>\n",
       "      <th>Abroad travel</th>\n",
       "      <th>Contact with COVID Patient</th>\n",
       "      <th>Attended Large Gathering</th>\n",
       "      <th>Visited Public Exposed Places</th>\n",
       "      <th>Family working in Public Exposed Places</th>\n",
       "      <th>COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Breathing Problem  Fever  Dry Cough  Sore throat  Hyper Tension  \\\n",
       "0                  1      1          1            1              1   \n",
       "1                  1      1          1            1              0   \n",
       "2                  1      1          1            1              0   \n",
       "3                  1      1          1            0              0   \n",
       "4                  1      1          1            1              1   \n",
       "\n",
       "   Abroad travel  Contact with COVID Patient  Attended Large Gathering  \\\n",
       "0              0                           1                         0   \n",
       "1              0                           0                         1   \n",
       "2              1                           0                         0   \n",
       "3              1                           0                         1   \n",
       "4              0                           1                         0   \n",
       "\n",
       "   Visited Public Exposed Places  Family working in Public Exposed Places  \\\n",
       "0                              1                                        1   \n",
       "1                              1                                        0   \n",
       "2                              0                                        0   \n",
       "3                              1                                        0   \n",
       "4                              1                                        0   \n",
       "\n",
       "   COVID-19  \n",
       "0         1  \n",
       "1         1  \n",
       "2         1  \n",
       "3         1  \n",
       "4         1  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cov = covid\n",
    "cov.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.542695Z",
     "iopub.status.busy": "2021-12-30T06:16:16.54224Z",
     "iopub.status.idle": "2021-12-30T06:16:16.579773Z",
     "shell.execute_reply": "2021-12-30T06:16:16.578545Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.542662Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_b267d_row0_col0, #T_b267d_row1_col1, #T_b267d_row2_col2, #T_b267d_row3_col3, #T_b267d_row4_col4, #T_b267d_row5_col5, #T_b267d_row6_col6, #T_b267d_row7_col7, #T_b267d_row8_col8, #T_b267d_row9_col9, #T_b267d_row10_col10 {\n",
       "  background-color: #276419;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col1, #T_b267d_row1_col0 {\n",
       "  background-color: #c51d7e;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col2, #T_b267d_row2_col0, #T_b267d_row9_col10, #T_b267d_row10_col9 {\n",
       "  background-color: #d75ea1;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col3, #T_b267d_row3_col0 {\n",
       "  background-color: #f3bcdd;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row0_col4, #T_b267d_row4_col0 {\n",
       "  background-color: #ae106b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col5, #T_b267d_row2_col7, #T_b267d_row5_col0, #T_b267d_row7_col2 {\n",
       "  background-color: #cc368b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col6, #T_b267d_row2_col3, #T_b267d_row3_col2, #T_b267d_row3_col7, #T_b267d_row6_col0, #T_b267d_row7_col3 {\n",
       "  background-color: #e388ba;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col7, #T_b267d_row7_col0 {\n",
       "  background-color: #e07eb3;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col8, #T_b267d_row7_col9, #T_b267d_row8_col0, #T_b267d_row9_col7 {\n",
       "  background-color: #b91574;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col9, #T_b267d_row4_col8, #T_b267d_row8_col4, #T_b267d_row9_col0 {\n",
       "  background-color: #9f095f;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row0_col10, #T_b267d_row5_col10, #T_b267d_row10_col0, #T_b267d_row10_col5 {\n",
       "  background-color: #faecf3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row1_col2, #T_b267d_row1_col5, #T_b267d_row2_col1, #T_b267d_row2_col6, #T_b267d_row5_col1, #T_b267d_row6_col2 {\n",
       "  background-color: #cf4191;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col3, #T_b267d_row3_col1 {\n",
       "  background-color: #f5c4e1;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row1_col4, #T_b267d_row2_col4, #T_b267d_row3_col8, #T_b267d_row4_col1, #T_b267d_row4_col2, #T_b267d_row5_col6, #T_b267d_row6_col5, #T_b267d_row6_col8, #T_b267d_row8_col3, #T_b267d_row8_col6 {\n",
       "  background-color: #c2197a;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col6, #T_b267d_row2_col9, #T_b267d_row6_col1, #T_b267d_row9_col2 {\n",
       "  background-color: #d861a2;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col7, #T_b267d_row5_col8, #T_b267d_row7_col1, #T_b267d_row8_col5 {\n",
       "  background-color: #bb1675;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col8, #T_b267d_row4_col7, #T_b267d_row7_col4, #T_b267d_row8_col1 {\n",
       "  background-color: #970559;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col9, #T_b267d_row9_col1 {\n",
       "  background-color: #9d085e;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row1_col10, #T_b267d_row10_col1 {\n",
       "  background-color: #f9d1e8;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row2_col5, #T_b267d_row5_col2 {\n",
       "  background-color: #f6c7e3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row2_col8, #T_b267d_row7_col8, #T_b267d_row8_col2, #T_b267d_row8_col7 {\n",
       "  background-color: #c41a7c;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row2_col10, #T_b267d_row10_col2 {\n",
       "  background-color: #f9f1f5;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row3_col4, #T_b267d_row4_col3 {\n",
       "  background-color: #ac0f6a;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row3_col5, #T_b267d_row5_col3 {\n",
       "  background-color: #e283b7;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row3_col6, #T_b267d_row6_col3 {\n",
       "  background-color: #de77ae;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row3_col9, #T_b267d_row9_col3 {\n",
       "  background-color: #c92b86;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row3_col10, #T_b267d_row10_col3 {\n",
       "  background-color: #f5f7f3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row4_col5, #T_b267d_row5_col4 {\n",
       "  background-color: #8e0152;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row4_col6, #T_b267d_row6_col4, #T_b267d_row8_col9, #T_b267d_row9_col8 {\n",
       "  background-color: #a60c65;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row4_col9, #T_b267d_row9_col4 {\n",
       "  background-color: #b1116d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row4_col10, #T_b267d_row10_col4 {\n",
       "  background-color: #c82884;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row5_col7, #T_b267d_row7_col5 {\n",
       "  background-color: #cb3289;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row5_col9, #T_b267d_row9_col5 {\n",
       "  background-color: #d34f99;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row6_col7, #T_b267d_row7_col6 {\n",
       "  background-color: #e795c3;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row6_col9, #T_b267d_row9_col6 {\n",
       "  background-color: #99065a;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_b267d_row6_col10, #T_b267d_row10_col6 {\n",
       "  background-color: #f9d3e8;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row7_col10, #T_b267d_row10_col7 {\n",
       "  background-color: #fde0ef;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_b267d_row8_col10, #T_b267d_row10_col8 {\n",
       "  background-color: #cd3a8d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_b267d_\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th class=\"col_heading level0 col0\" >Breathing Problem</th>\n",
       "      <th class=\"col_heading level0 col1\" >Fever</th>\n",
       "      <th class=\"col_heading level0 col2\" >Dry Cough</th>\n",
       "      <th class=\"col_heading level0 col3\" >Sore throat</th>\n",
       "      <th class=\"col_heading level0 col4\" >Hyper Tension</th>\n",
       "      <th class=\"col_heading level0 col5\" >Abroad travel</th>\n",
       "      <th class=\"col_heading level0 col6\" >Contact with COVID Patient</th>\n",
       "      <th class=\"col_heading level0 col7\" >Attended Large Gathering</th>\n",
       "      <th class=\"col_heading level0 col8\" >Visited Public Exposed Places</th>\n",
       "      <th class=\"col_heading level0 col9\" >Family working in Public Exposed Places</th>\n",
       "      <th class=\"col_heading level0 col10\" >COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row0\" class=\"row_heading level0 row0\" >Breathing Problem</th>\n",
       "      <td id=\"T_b267d_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row0_col1\" class=\"data row0 col1\" >0.089903</td>\n",
       "      <td id=\"T_b267d_row0_col2\" class=\"data row0 col2\" >0.159562</td>\n",
       "      <td id=\"T_b267d_row0_col3\" class=\"data row0 col3\" >0.303768</td>\n",
       "      <td id=\"T_b267d_row0_col4\" class=\"data row0 col4\" >0.045256</td>\n",
       "      <td id=\"T_b267d_row0_col5\" class=\"data row0 col5\" >0.117795</td>\n",
       "      <td id=\"T_b267d_row0_col6\" class=\"data row0 col6\" >0.214634</td>\n",
       "      <td id=\"T_b267d_row0_col7\" class=\"data row0 col7\" >0.200304</td>\n",
       "      <td id=\"T_b267d_row0_col8\" class=\"data row0 col8\" >0.066688</td>\n",
       "      <td id=\"T_b267d_row0_col9\" class=\"data row0 col9\" >0.018295</td>\n",
       "      <td id=\"T_b267d_row0_col10\" class=\"data row0 col10\" >0.443764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row1\" class=\"row_heading level0 row1\" >Fever</th>\n",
       "      <td id=\"T_b267d_row1_col0\" class=\"data row1 col0\" >0.089903</td>\n",
       "      <td id=\"T_b267d_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row1_col2\" class=\"data row1 col2\" >0.127580</td>\n",
       "      <td id=\"T_b267d_row1_col3\" class=\"data row1 col3\" >0.322235</td>\n",
       "      <td id=\"T_b267d_row1_col4\" class=\"data row1 col4\" >0.079001</td>\n",
       "      <td id=\"T_b267d_row1_col5\" class=\"data row1 col5\" >0.128726</td>\n",
       "      <td id=\"T_b267d_row1_col6\" class=\"data row1 col6\" >0.164704</td>\n",
       "      <td id=\"T_b267d_row1_col7\" class=\"data row1 col7\" >0.070490</td>\n",
       "      <td id=\"T_b267d_row1_col8\" class=\"data row1 col8\" >0.002252</td>\n",
       "      <td id=\"T_b267d_row1_col9\" class=\"data row1 col9\" >0.012102</td>\n",
       "      <td id=\"T_b267d_row1_col10\" class=\"data row1 col10\" >0.352891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row2\" class=\"row_heading level0 row2\" >Dry Cough</th>\n",
       "      <td id=\"T_b267d_row2_col0\" class=\"data row2 col0\" >0.159562</td>\n",
       "      <td id=\"T_b267d_row2_col1\" class=\"data row2 col1\" >0.127580</td>\n",
       "      <td id=\"T_b267d_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row2_col3\" class=\"data row2 col3\" >0.213907</td>\n",
       "      <td id=\"T_b267d_row2_col4\" class=\"data row2 col4\" >0.081989</td>\n",
       "      <td id=\"T_b267d_row2_col5\" class=\"data row2 col5\" >0.331418</td>\n",
       "      <td id=\"T_b267d_row2_col6\" class=\"data row2 col6\" >0.128330</td>\n",
       "      <td id=\"T_b267d_row2_col7\" class=\"data row2 col7\" >0.117963</td>\n",
       "      <td id=\"T_b267d_row2_col8\" class=\"data row2 col8\" >0.086176</td>\n",
       "      <td id=\"T_b267d_row2_col9\" class=\"data row2 col9\" >0.163102</td>\n",
       "      <td id=\"T_b267d_row2_col10\" class=\"data row2 col10\" >0.464292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row3\" class=\"row_heading level0 row3\" >Sore throat</th>\n",
       "      <td id=\"T_b267d_row3_col0\" class=\"data row3 col0\" >0.303768</td>\n",
       "      <td id=\"T_b267d_row3_col1\" class=\"data row3 col1\" >0.322235</td>\n",
       "      <td id=\"T_b267d_row3_col2\" class=\"data row3 col2\" >0.213907</td>\n",
       "      <td id=\"T_b267d_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row3_col4\" class=\"data row3 col4\" >0.042811</td>\n",
       "      <td id=\"T_b267d_row3_col5\" class=\"data row3 col5\" >0.205986</td>\n",
       "      <td id=\"T_b267d_row3_col6\" class=\"data row3 col6\" >0.189251</td>\n",
       "      <td id=\"T_b267d_row3_col7\" class=\"data row3 col7\" >0.216438</td>\n",
       "      <td id=\"T_b267d_row3_col8\" class=\"data row3 col8\" >0.079055</td>\n",
       "      <td id=\"T_b267d_row3_col9\" class=\"data row3 col9\" >0.104378</td>\n",
       "      <td id=\"T_b267d_row3_col10\" class=\"data row3 col10\" >0.502848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row4\" class=\"row_heading level0 row4\" >Hyper Tension</th>\n",
       "      <td id=\"T_b267d_row4_col0\" class=\"data row4 col0\" >0.045256</td>\n",
       "      <td id=\"T_b267d_row4_col1\" class=\"data row4 col1\" >0.079001</td>\n",
       "      <td id=\"T_b267d_row4_col2\" class=\"data row4 col2\" >0.081989</td>\n",
       "      <td id=\"T_b267d_row4_col3\" class=\"data row4 col3\" >0.042811</td>\n",
       "      <td id=\"T_b267d_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row4_col5\" class=\"data row4 col5\" >-0.016382</td>\n",
       "      <td id=\"T_b267d_row4_col6\" class=\"data row4 col6\" >0.027307</td>\n",
       "      <td id=\"T_b267d_row4_col7\" class=\"data row4 col7\" >0.002911</td>\n",
       "      <td id=\"T_b267d_row4_col8\" class=\"data row4 col8\" >0.019174</td>\n",
       "      <td id=\"T_b267d_row4_col9\" class=\"data row4 col9\" >0.048152</td>\n",
       "      <td id=\"T_b267d_row4_col10\" class=\"data row4 col10\" >0.102575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row5\" class=\"row_heading level0 row5\" >Abroad travel</th>\n",
       "      <td id=\"T_b267d_row5_col0\" class=\"data row5 col0\" >0.117795</td>\n",
       "      <td id=\"T_b267d_row5_col1\" class=\"data row5 col1\" >0.128726</td>\n",
       "      <td id=\"T_b267d_row5_col2\" class=\"data row5 col2\" >0.331418</td>\n",
       "      <td id=\"T_b267d_row5_col3\" class=\"data row5 col3\" >0.205986</td>\n",
       "      <td id=\"T_b267d_row5_col4\" class=\"data row5 col4\" >-0.016382</td>\n",
       "      <td id=\"T_b267d_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row5_col6\" class=\"data row5 col6\" >0.080210</td>\n",
       "      <td id=\"T_b267d_row5_col7\" class=\"data row5 col7\" >0.113399</td>\n",
       "      <td id=\"T_b267d_row5_col8\" class=\"data row5 col8\" >0.069609</td>\n",
       "      <td id=\"T_b267d_row5_col9\" class=\"data row5 col9\" >0.143094</td>\n",
       "      <td id=\"T_b267d_row5_col10\" class=\"data row5 col10\" >0.443875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row6\" class=\"row_heading level0 row6\" >Contact with COVID Patient</th>\n",
       "      <td id=\"T_b267d_row6_col0\" class=\"data row6 col0\" >0.214634</td>\n",
       "      <td id=\"T_b267d_row6_col1\" class=\"data row6 col1\" >0.164704</td>\n",
       "      <td id=\"T_b267d_row6_col2\" class=\"data row6 col2\" >0.128330</td>\n",
       "      <td id=\"T_b267d_row6_col3\" class=\"data row6 col3\" >0.189251</td>\n",
       "      <td id=\"T_b267d_row6_col4\" class=\"data row6 col4\" >0.027307</td>\n",
       "      <td id=\"T_b267d_row6_col5\" class=\"data row6 col5\" >0.080210</td>\n",
       "      <td id=\"T_b267d_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row6_col7\" class=\"data row6 col7\" >0.234649</td>\n",
       "      <td id=\"T_b267d_row6_col8\" class=\"data row6 col8\" >0.079800</td>\n",
       "      <td id=\"T_b267d_row6_col9\" class=\"data row6 col9\" >0.006909</td>\n",
       "      <td id=\"T_b267d_row6_col10\" class=\"data row6 col10\" >0.357122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row7\" class=\"row_heading level0 row7\" >Attended Large Gathering</th>\n",
       "      <td id=\"T_b267d_row7_col0\" class=\"data row7 col0\" >0.200304</td>\n",
       "      <td id=\"T_b267d_row7_col1\" class=\"data row7 col1\" >0.070490</td>\n",
       "      <td id=\"T_b267d_row7_col2\" class=\"data row7 col2\" >0.117963</td>\n",
       "      <td id=\"T_b267d_row7_col3\" class=\"data row7 col3\" >0.216438</td>\n",
       "      <td id=\"T_b267d_row7_col4\" class=\"data row7 col4\" >0.002911</td>\n",
       "      <td id=\"T_b267d_row7_col5\" class=\"data row7 col5\" >0.113399</td>\n",
       "      <td id=\"T_b267d_row7_col6\" class=\"data row7 col6\" >0.234649</td>\n",
       "      <td id=\"T_b267d_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row7_col8\" class=\"data row7 col8\" >0.083795</td>\n",
       "      <td id=\"T_b267d_row7_col9\" class=\"data row7 col9\" >0.063776</td>\n",
       "      <td id=\"T_b267d_row7_col10\" class=\"data row7 col10\" >0.390145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row8\" class=\"row_heading level0 row8\" >Visited Public Exposed Places</th>\n",
       "      <td id=\"T_b267d_row8_col0\" class=\"data row8 col0\" >0.066688</td>\n",
       "      <td id=\"T_b267d_row8_col1\" class=\"data row8 col1\" >0.002252</td>\n",
       "      <td id=\"T_b267d_row8_col2\" class=\"data row8 col2\" >0.086176</td>\n",
       "      <td id=\"T_b267d_row8_col3\" class=\"data row8 col3\" >0.079055</td>\n",
       "      <td id=\"T_b267d_row8_col4\" class=\"data row8 col4\" >0.019174</td>\n",
       "      <td id=\"T_b267d_row8_col5\" class=\"data row8 col5\" >0.069609</td>\n",
       "      <td id=\"T_b267d_row8_col6\" class=\"data row8 col6\" >0.079800</td>\n",
       "      <td id=\"T_b267d_row8_col7\" class=\"data row8 col7\" >0.083795</td>\n",
       "      <td id=\"T_b267d_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row8_col9\" class=\"data row8 col9\" >0.028486</td>\n",
       "      <td id=\"T_b267d_row8_col10\" class=\"data row8 col10\" >0.119755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row9\" class=\"row_heading level0 row9\" >Family working in Public Exposed Places</th>\n",
       "      <td id=\"T_b267d_row9_col0\" class=\"data row9 col0\" >0.018295</td>\n",
       "      <td id=\"T_b267d_row9_col1\" class=\"data row9 col1\" >0.012102</td>\n",
       "      <td id=\"T_b267d_row9_col2\" class=\"data row9 col2\" >0.163102</td>\n",
       "      <td id=\"T_b267d_row9_col3\" class=\"data row9 col3\" >0.104378</td>\n",
       "      <td id=\"T_b267d_row9_col4\" class=\"data row9 col4\" >0.048152</td>\n",
       "      <td id=\"T_b267d_row9_col5\" class=\"data row9 col5\" >0.143094</td>\n",
       "      <td id=\"T_b267d_row9_col6\" class=\"data row9 col6\" >0.006909</td>\n",
       "      <td id=\"T_b267d_row9_col7\" class=\"data row9 col7\" >0.063776</td>\n",
       "      <td id=\"T_b267d_row9_col8\" class=\"data row9 col8\" >0.028486</td>\n",
       "      <td id=\"T_b267d_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
       "      <td id=\"T_b267d_row9_col10\" class=\"data row9 col10\" >0.160208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b267d_level0_row10\" class=\"row_heading level0 row10\" >COVID-19</th>\n",
       "      <td id=\"T_b267d_row10_col0\" class=\"data row10 col0\" >0.443764</td>\n",
       "      <td id=\"T_b267d_row10_col1\" class=\"data row10 col1\" >0.352891</td>\n",
       "      <td id=\"T_b267d_row10_col2\" class=\"data row10 col2\" >0.464292</td>\n",
       "      <td id=\"T_b267d_row10_col3\" class=\"data row10 col3\" >0.502848</td>\n",
       "      <td id=\"T_b267d_row10_col4\" class=\"data row10 col4\" >0.102575</td>\n",
       "      <td id=\"T_b267d_row10_col5\" class=\"data row10 col5\" >0.443875</td>\n",
       "      <td id=\"T_b267d_row10_col6\" class=\"data row10 col6\" >0.357122</td>\n",
       "      <td id=\"T_b267d_row10_col7\" class=\"data row10 col7\" >0.390145</td>\n",
       "      <td id=\"T_b267d_row10_col8\" class=\"data row10 col8\" >0.119755</td>\n",
       "      <td id=\"T_b267d_row10_col9\" class=\"data row10 col9\" >0.160208</td>\n",
       "      <td id=\"T_b267d_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x14cead4f580>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Correlation after removing unnecessary features\n",
    "correlation=cov.corr()\n",
    "correlation.style.background_gradient(cmap='PiYG',axis=None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-30T06:16:16.582182Z",
     "iopub.status.busy": "2021-12-30T06:16:16.581604Z",
     "iopub.status.idle": "2021-12-30T06:16:16.598553Z",
     "shell.execute_reply": "2021-12-30T06:16:16.597649Z",
     "shell.execute_reply.started": "2021-12-30T06:16:16.582129Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Breathing Problem</th>\n",
       "      <th>Fever</th>\n",
       "      <th>Dry Cough</th>\n",
       "      <th>Sore throat</th>\n",
       "      <th>Hyper Tension</th>\n",
       "      <th>Abroad travel</th>\n",
       "      <th>Contact with COVID Patient</th>\n",
       "      <th>Attended Large Gathering</th>\n",
       "      <th>Visited Public Exposed Places</th>\n",
       "      <th>Family working in Public Exposed Places</th>\n",
       "      <th>COVID-19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Breathing Problem  Fever  Dry Cough  Sore throat  Hyper Tension  \\\n",
       "0                  1      1          1            1              1   \n",
       "1                  1      1          1            1              0   \n",
       "2                  1      1          1            1              0   \n",
       "3                  1      1          1            0              0   \n",
       "4                  1      1          1            1              1   \n",
       "\n",
       "   Abroad travel  Contact with COVID Patient  Attended Large Gathering  \\\n",
       "0              0                           1                         0   \n",
       "1              0                           0                         1   \n",
       "2              1                           0                         0   \n",
       "3              1                           0                         1   \n",
       "4              0                           1                         0   \n",
       "\n",
       "   Visited Public Exposed Places  Family working in Public Exposed Places  \\\n",
       "0                              1                                        1   \n",
       "1                              1                                        0   \n",
       "2                              0                                        0   \n",
       "3                              1                                        0   \n",
       "4                              1                                        0   \n",
       "\n",
       "   COVID-19  \n",
       "0         1  \n",
       "1         1  \n",
       "2         1  \n",
       "3         1  \n",
       "4         1  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cov.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Data Splitting and Machine Learning**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=cov.drop('COVID-19',axis=1)\n",
    "y=cov['COVID-19']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Train-Test Split Validation (Ratio 75:25)\n",
    "X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4075, 10) (1359, 10) (4075,) (1359,)\n"
     ]
    }
   ],
   "source": [
    "print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_score(clf, X_train, y_train, X_test, y_test, train=True):\n",
    "    if train:\n",
    "        pred = clf.predict(X_train)\n",
    "        clf_report = pd.DataFrame(classification_report(y_train, pred, output_dict=True))\n",
    "        print(\"Train Result:\\n================================================\")\n",
    "        print(f\"Accuracy Score: {accuracy_score(y_train, pred) * 100:.2f}%\")\n",
    "        print(\"_______________________________________________\")\n",
    "        print(f\"CLASSIFICATION REPORT:\\n{clf_report}\")\n",
    "        print(\"_______________________________________________\")\n",
    "        print(f\"Confusion Matrix: \\n {confusion_matrix(y_train, pred)}\\n\")\n",
    "        \n",
    "    elif train==False:\n",
    "        pred = clf.predict(X_test)\n",
    "        clf_report = pd.DataFrame(classification_report(y_test, pred, output_dict=True))\n",
    "        print(\"Test Result:\\n================================================\")        \n",
    "        print(f\"Accuracy Score: {accuracy_score(y_test, pred) * 100:.2f}%\")\n",
    "        print(\"_______________________________________________\")\n",
    "        print(f\"CLASSIFICATION REPORT:\\n{clf_report}\")\n",
    "        print(\"_______________________________________________\")\n",
    "        print(f\"Confusion Matrix: \\n {confusion_matrix(y_test, pred)}\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **1. Logistic Regression**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Result:\n",
      "================================================\n",
      "Accuracy Score: 96.52%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.893204     0.983390  0.965153     0.938297      0.965906\n",
      "recall       0.931646     0.973212  0.965153     0.952429      0.965153\n",
      "f1-score     0.912020     0.978274  0.965153     0.945147      0.965430\n",
      "support    790.000000  3285.000000  0.965153  4075.000000   4075.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 736   54]\n",
      " [  88 3197]]\n",
      "\n",
      "Test Result:\n",
      "================================================\n",
      "Accuracy Score: 96.32%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.895131     0.979853  0.963208     0.937492      0.963582\n",
      "recall       0.915709     0.974499  0.963208     0.945104      0.963208\n",
      "f1-score     0.905303     0.977169  0.963208     0.941236      0.963367\n",
      "support    261.000000  1098.000000  0.963208  1359.000000   1359.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 239   22]\n",
      " [  28 1070]]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "lr_clf = LogisticRegression()\n",
    "lr_clf.fit(X_train, y_train)\n",
    "\n",
    "print_score(lr_clf, X_train, y_train, X_test, y_test, train=True)\n",
    "print_score(lr_clf, X_train, y_train, X_test, y_test, train=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **2. Decision Tree Classifer**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Result:\n",
      "================================================\n",
      "Accuracy Score: 97.57%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.939009     0.984489  0.975706     0.961749      0.975672\n",
      "recall       0.935443     0.985388  0.975706     0.960416      0.975706\n",
      "f1-score     0.937223     0.984938  0.975706     0.961080      0.975688\n",
      "support    790.000000  3285.000000  0.975706  4075.000000   4075.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 739   51]\n",
      " [  48 3237]]\n",
      "\n",
      "Test Result:\n",
      "================================================\n",
      "Accuracy Score: 97.13%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.926923     0.981802  0.971302     0.954362      0.971262\n",
      "recall       0.923372     0.982696  0.971302     0.953034      0.971302\n",
      "f1-score     0.925144     0.982249  0.971302     0.953696      0.971281\n",
      "support    261.000000  1098.000000  0.971302  1359.000000   1359.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 241   20]\n",
      " [  19 1079]]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "dt_clf = DecisionTreeClassifier()\n",
    "dt_clf.fit(X_train, y_train)\n",
    "\n",
    "print_score(dt_clf, X_train, y_train, X_test, y_test, train=True)\n",
    "print_score(dt_clf, X_train, y_train, X_test, y_test, train=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **3. Random Forest Classifier**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Result:\n",
      "================================================\n",
      "Accuracy Score: 97.57%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.955204     0.980398  0.975706     0.967801      0.975514\n",
      "recall       0.917722     0.989650  0.975706     0.953686      0.975706\n",
      "f1-score     0.936088     0.985002  0.975706     0.960545      0.975519\n",
      "support    790.000000  3285.000000  0.975706  4075.000000   4075.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 725   65]\n",
      " [  34 3251]]\n",
      "\n",
      "Test Result:\n",
      "================================================\n",
      "Accuracy Score: 97.42%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.948413     0.980126  0.974246     0.964270      0.974036\n",
      "recall       0.915709     0.988160  0.974246     0.951935      0.974246\n",
      "f1-score     0.931774     0.984127  0.974246     0.957950      0.974072\n",
      "support    261.000000  1098.000000  0.974246  1359.000000   1359.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 239   22]\n",
      " [  13 1085]]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "rf_clf = RandomForestClassifier()\n",
    "rf_clf.fit(X_train, y_train)\n",
    "\n",
    "print_score(rf_clf, X_train, y_train, X_test, y_test, train=True)\n",
    "print_score(rf_clf, X_train, y_train, X_test, y_test, train=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **4. XGB(GRadient Boosting Classifier)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Result:\n",
      "================================================\n",
      "Accuracy Score: 97.33%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.934866     0.982382  0.973252     0.958624      0.973170\n",
      "recall       0.926582     0.984475  0.973252     0.955529      0.973252\n",
      "f1-score     0.930706     0.983427  0.973252     0.957066      0.973206\n",
      "support    790.000000  3285.000000  0.973252  4075.000000   4075.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 732   58]\n",
      " [  51 3234]]\n",
      "\n",
      "Test Result:\n",
      "================================================\n",
      "Accuracy Score: 96.98%\n",
      "_______________________________________________\n",
      "CLASSIFICATION REPORT:\n",
      "                    0            1  accuracy    macro avg  weighted avg\n",
      "precision    0.933071     0.978281  0.969831     0.955676      0.969598\n",
      "recall       0.908046     0.984517  0.969831     0.946282      0.969831\n",
      "f1-score     0.920388     0.981389  0.969831     0.950889      0.969674\n",
      "support    261.000000  1098.000000  0.969831  1359.000000   1359.000000\n",
      "_______________________________________________\n",
      "Confusion Matrix: \n",
      " [[ 237   24]\n",
      " [  17 1081]]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "xgb_clf = GradientBoostingClassifier(random_state = 12345)\n",
    "xgb_clf.fit(X_train, y_train)\n",
    "\n",
    "print_score(xgb_clf, X_train, y_train, X_test, y_test, train=True)\n",
    "print_score(xgb_clf, X_train, y_train, X_test, y_test, train=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **Testing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "new = X_test.iloc[0]\n",
    "a = np.asarray(new)\n",
    "a = a.reshape(1,-1)\n",
    "p = lr_clf.predict(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Person is affected by Covid 19 and is at risk of dying\n"
     ]
    }
   ],
   "source": [
    "if (p[0] == 1):\n",
    "    print(\"Person is affected by Covid 19 and is at risk of dying\")\n",
    "else:\n",
    "    print(\"Great! the results are negative and you don't have to worry\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
